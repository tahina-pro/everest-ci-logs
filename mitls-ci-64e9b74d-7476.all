This is /home/everbld/everest-ci/ci
Working directory: /cygdrive/c/Build/Agent1/_work/4/s
About to run: mitls_verify_and_hints
BUILD_SOURCEBRANCHNAME: master
BUILD_DEFINITIONNAME: miTLS-Nightly-Windows
From https://github.com/FStarLang/FStar
d93aa41..ed1cc73  master     -> origin/master
d93aa41..7e5ecb8  c_ppdev_initial -> origin/c_ppdev_initial
409c288..b6d7ace  danel_mrefs -> origin/danel_mrefs
25f58e9..1dd1f8b  darrenge_binarybuild -> origin/darrenge_binarybuild
c1d7086..b489cd4  guido_bughunt -> origin/guido_bughunt
* [new branch]      guido_strings -> origin/guido_strings
d64173c..826cf6d  guido_tactics -> origin/guido_tactics
* [new branch]      kyod_ppdev -> origin/kyod_ppdev
+ 1a24483...3de74af sishtiaq_fsdoc_nightly -> origin/sishtiaq_fsdoc_nightly  (forced update)
HEAD is now at b9b6b86 continuing post krml-test.exe error
make: Entering directory '/cygdrive/c/Build/Agent1/_work/4/s/fstar/src/ocaml-output'
rm -rf _build
rm -f parse.mly FStar_Parser_Parse.ml FStar_Version.ml
rm -f *.tar.gz *.zip
make: Leaving directory '/cygdrive/c/Build/Agent1/_work/4/s/fstar/src/ocaml-output'
make: Entering directory '/cygdrive/c/Build/Agent1/_work/4/s/fstar/src/ocaml-output'
cp "../extraction/ml/FStar_Extraction_ML_PrintML_4.02.3.ml" ../extraction/ml/FStar_Extraction_ML_PrintML.ml
# TODO : call menhir directly when positions are fixed instead of
# letting OCamlbuild go through ocamlyacc
menhir  --only-preprocess-for-ocamlyacc ../parser/parse.mly > parse.mly
Warning: you are using the standard library and/or the %inline keyword. We
recommend switching on --infer in order to avoid obscure type error messages.
# Save a copy of the dumb parse.mly for whoever doesn't have menhir.
echo 'let dummy () = ();;' > FStar_Version.ml
true parse.mly
echo 'FStar_Options._version := "0.9.4.3";;' >> FStar_Version.ml
cp parse.mly ../parser/ml/
echo 'FStar_Options._platform := "Windows_x64";;' >> FStar_Version.ml
echo "%{" > ../parser/parse.fsy
echo 'FStar_Options._compiler := "OCaml 4.02.3";;' >> FStar_Version.ml
# We are opening the same module twice but we need these modules
echo "#light \"off\"" >> ../parser/parse.fsy
echo 'FStar_Options._date := "2017-05-01T01:00:16-07:00";;' >> FStar_Version.ml
# open for the definition of tokens
echo "// (c) Microsoft Corporation. All rights reserved" >> ../parser/parse.fsy
echo 'FStar_Options._commit:= "b9b6b86";;' >> FStar_Version.ml
echo "open Prims" > FStar_Parser_Parse.ml
echo "open Prims" >> ../parser/parse.fsy
echo "open FStar_Errors" >> FStar_Parser_Parse.ml
echo "open FStar.Errors" >> ../parser/parse.fsy
echo "open FStar_List" >> FStar_Parser_Parse.ml
echo "open FStar.List" >> ../parser/parse.fsy
echo "open FStar_Util" >> FStar_Parser_Parse.ml
echo "open FStar.Util" >> ../parser/parse.fsy
echo "open FStar_Range" >> FStar_Parser_Parse.ml
echo "open FStar.Range" >> ../parser/parse.fsy
echo "open FStar.Options" >> ../parser/parse.fsy
echo "open FStar_Options" >> FStar_Parser_Parse.ml
echo "open FStar.Syntax.Syntax" >> ../parser/parse.fsy
echo "open FStar_Syntax_Syntax" >> FStar_Parser_Parse.ml
echo "open FStar.Syntax.Const" >> ../parser/parse.fsy
echo "open FStar_Syntax_Const" >> FStar_Parser_Parse.ml
echo "open FStar.Syntax.Util" >> ../parser/parse.fsy
echo "open FStar_Syntax_Util" >> FStar_Parser_Parse.ml
echo "open FStar.Parser.AST" >> ../parser/parse.fsy
echo "open FStar_Parser_AST" >> FStar_Parser_Parse.ml
echo "open FStar.Parser.Util" >> ../parser/parse.fsy
echo "open FStar_Parser_Util" >> FStar_Parser_Parse.ml
echo "open FStar.Const" >> ../parser/parse.fsy
echo "open FStar_Const" >> FStar_Parser_Parse.ml
echo "open FStar.Ident" >> ../parser/parse.fsy
echo "open FStar_Ident" >> FStar_Parser_Parse.ml
echo "open FStar.String" >> ../parser/parse.fsy
echo "open FStar_String" >> FStar_Parser_Parse.ml
# TODO : fsyacc seems to complain as soon as there is an arrow -> in a %type declaration...
# TODO: create a proper OCamlbuild rule for this production so that
cat parse.mly | sed -e '/%{/d' \
-e '/^open /d' \
-e '/%token/s/[a-zA-Z0-9_]*\.//g' \
-e '/%type/s/[a-zA-Z0-9_]*\.//g' \
-e '/%token.*->.*/d' \
-e '/%type.*->.*/d' \
>> ../parser/parse.fsy
# OCamlbuild knows how to generate parse.mly first (possibly using
# menhir) and removes the production as needed.
ocamlyacc parse.mly 2> yac-log
cat yac-log
7 shift/reduce conflicts.
cat parse.ml >> FStar_Parser_Parse.ml
rm parse.ml parse.mli
cd ../../ && ocamlbuild -cflag '-g' -I src/ocaml-output -I src/basic/ml -I src/parser/ml -I src/fstar/ml -I src/extraction/ml -j 24 -build-dir src/ocaml-output/_build -I src/prettyprint/ml -I src/ocaml-output/bootlibs -use-ocamlfind main.native
mkdir 'C:\Build\Agent1\_work\4\s\fstar\src/ocaml-output/_build'
Exception
Sys_error("C:\\Build\\Agent1\\_work\\4\\s\\fstar\\src/ocaml-output/_build/_log: Permission denied").
make: Leaving directory '/cygdrive/c/Build/Agent1/_work/4/s/fstar/src/ocaml-output'
make: *** [Makefile:102: fstar.exe] Error 100
sh: src/ocaml-output/_build/sanitize.sh: No such file or directory
