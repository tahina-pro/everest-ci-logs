Cloning into 'fstarlang_binaries'...
Already on 'master'
--2017-07-16 02:00:35--  https://dist.nuget.org/win-x86-commandline/latest/nuget.exe
Resolving dist.nuget.org... 2606:2800:11f:17a5:191a:18d5:537:22f9, 72.21.81.200
Connecting to dist.nuget.org|2606:2800:11f:17a5:191a:18d5:537:22f9|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 4596440 (4.4M) [application/octet-stream]
Saving to: ‘nuget.exe’

0K .......... .......... .......... .......... ..........  1% 17.9M 0s
50K .......... .......... .......... .......... ..........  2% 22.3M 0s
100K .......... .......... .......... .......... ..........  3% 25.5M 0s
150K .......... .......... .......... .......... ..........  4% 30.1M 0s
200K .......... .......... .......... .......... ..........  5% 8.48M 0s
250K .......... .......... .......... .......... ..........  6% 35.2M 0s
300K .......... .......... .......... .......... ..........  7% 9.25M 0s
350K .......... .......... .......... .......... ..........  8% 9.38M 0s
400K .......... .......... .......... .......... .......... 10% 40.3M 0s
450K .......... .......... .......... .......... .......... 11% 41.0M 0s
500K .......... .......... .......... .......... .......... 12% 39.7M 0s
550K .......... .......... .......... .......... .......... 13% 37.5M 0s
600K .......... .......... .......... .......... .......... 14% 32.6M 0s
650K .......... .......... .......... .......... .......... 15% 42.6M 0s
700K .......... .......... .......... .......... .......... 16% 36.5M 0s
750K .......... .......... .......... .......... .......... 17% 28.0M 0s
800K .......... .......... .......... .......... .......... 18% 43.8M 0s
850K .......... .......... .......... .......... .......... 20% 6.41M 0s
900K .......... .......... .......... .......... .......... 21% 4.92M 0s
950K .......... .......... .......... .......... .......... 22% 6.57M 0s
1000K .......... .......... .......... .......... .......... 23% 30.7M 0s
1050K .......... .......... .......... .......... .......... 24% 40.3M 0s
1100K .......... .......... .......... .......... .......... 25% 25.1M 0s
1150K .......... .......... .......... .......... .......... 26% 30.2M 0s
1200K .......... .......... .......... .......... .......... 27% 47.3M 0s
1250K .......... .......... .......... .......... .......... 28% 35.2M 0s
1300K .......... .......... .......... .......... .......... 30% 41.9M 0s
1350K .......... .......... .......... .......... .......... 31% 41.7M 0s
1400K .......... .......... .......... .......... .......... 32% 39.7M 0s
1450K .......... .......... .......... .......... .......... 33% 31.6M 0s
1500K .......... .......... .......... .......... .......... 34% 41.4M 0s
1550K .......... .......... .......... .......... .......... 35% 34.6M 0s
1600K .......... .......... .......... .......... .......... 36% 44.3M 0s
1650K .......... .......... .......... .......... .......... 37% 39.9M 0s
1700K .......... .......... .......... .......... .......... 38% 45.0M 0s
1750K .......... .......... .......... .......... .......... 40% 40.5M 0s
1800K .......... .......... .......... .......... .......... 41% 43.4M 0s
1850K .......... .......... .......... .......... .......... 42% 40.3M 0s
1900K .......... .......... .......... .......... .......... 43% 37.7M 0s
1950K .......... .......... .......... .......... .......... 44% 31.6M 0s
2000K .......... .......... .......... .......... .......... 45% 43.9M 0s
2050K .......... .......... .......... .......... .......... 46% 37.9M 0s
2100K .......... .......... .......... .......... .......... 47% 32.1M 0s
2150K .......... .......... .......... .......... .......... 49% 21.2M 0s
2200K .......... .......... .......... .......... .......... 50% 41.0M 0s
2250K .......... .......... .......... .......... .......... 51% 45.2M 0s
2300K .......... .......... .......... .......... .......... 52% 41.8M 0s
2350K .......... .......... .......... .......... .......... 53% 33.4M 0s
2400K .......... .......... .......... .......... .......... 54% 38.8M 0s
2450K .......... .......... .......... .......... .......... 55% 38.4M 0s
2500K .......... .......... .......... .......... .......... 56% 41.7M 0s
2550K .......... .......... .......... .......... .......... 57% 31.7M 0s
2600K .......... .......... .......... .......... .......... 59% 38.3M 0s
2650K .......... .......... .......... .......... .......... 60% 42.1M 0s
2700K .......... .......... .......... .......... .......... 61% 40.4M 0s
2750K .......... .......... .......... .......... .......... 62% 30.9M 0s
2800K .......... .......... .......... .......... .......... 63% 44.1M 0s
2850K .......... .......... .......... .......... .......... 64% 37.5M 0s
2900K .......... .......... .......... .......... .......... 65% 39.8M 0s
2950K .......... .......... .......... .......... .......... 66% 35.9M 0s
3000K .......... .......... .......... .......... .......... 67% 38.8M 0s
3050K .......... .......... .......... .......... .......... 69% 34.1M 0s
3100K .......... .......... .......... .......... .......... 70% 40.5M 0s
3150K .......... .......... .......... .......... .......... 71% 34.7M 0s
3200K .......... .......... .......... .......... .......... 72% 42.8M 0s
3250K .......... .......... .......... .......... .......... 73% 37.8M 0s
3300K .......... .......... .......... .......... .......... 74% 40.8M 0s
3350K .......... .......... .......... .......... .......... 75% 33.8M 0s
3400K .......... .......... .......... .......... .......... 76% 44.1M 0s
3450K .......... .......... .......... .......... .......... 77% 33.9M 0s
3500K .......... .......... .......... .......... .......... 79% 39.7M 0s
3550K .......... .......... .......... .......... .......... 80% 28.5M 0s
3600K .......... .......... .......... .......... .......... 81% 41.2M 0s
3650K .......... .......... .......... .......... .......... 82% 32.9M 0s
3700K .......... .......... .......... .......... .......... 83% 34.6M 0s
3750K .......... .......... .......... .......... .......... 84% 36.2M 0s
3800K .......... .......... .......... .......... .......... 85% 44.9M 0s
3850K .......... .......... .......... .......... .......... 86% 40.4M 0s
3900K .......... .......... .......... .......... .......... 87% 37.3M 0s
3950K .......... .......... .......... .......... .......... 89% 33.5M 0s
4000K .......... .......... .......... .......... .......... 90% 39.3M 0s
4050K .......... .......... .......... .......... .......... 91% 43.8M 0s
4100K .......... .......... .......... .......... .......... 92% 36.0M 0s
4150K .......... .......... .......... .......... .......... 93% 38.2M 0s
4200K .......... .......... .......... .......... .......... 94% 39.9M 0s
4250K .......... .......... .......... .......... .......... 95% 47.1M 0s
4300K .......... .......... .......... .......... .......... 96% 57.0M 0s
4350K .......... .......... .......... .......... .......... 98% 36.4M 0s
4400K .......... .......... .......... .......... .......... 99% 43.1M 0s
4450K .......... .......... .......... ........             100% 47.0M=0.2s

2017-07-16 02:00:36 (28.6 MB/s) - ‘nuget.exe’ saved [4596440/4596440]

Cloning into 'mitls-fstar'...
Already on 'master'
Cloning into 'vale'...
Already on 'master'
Cloning into 'FStar'...
Checking out files:  46% (966/2087)   Checking out files:  47% (981/2087)   Checking out files:  48% (1002/2087)   Checking out files:  49% (1023/2087)   Checking out files:  50% (1044/2087)   Checking out files:  51% (1065/2087)   Checking out files:  52% (1086/2087)   Checking out files:  53% (1107/2087)   Checking out files:  54% (1127/2087)   Checking out files:  55% (1148/2087)   Checking out files:  56% (1169/2087)   Checking out files:  57% (1190/2087)   Checking out files:  58% (1211/2087)   Checking out files:  59% (1232/2087)   Checking out files:  60% (1253/2087)   Checking out files:  61% (1274/2087)   Checking out files:  62% (1294/2087)   Checking out files:  63% (1315/2087)   Checking out files:  64% (1336/2087)   Checking out files:  65% (1357/2087)   Checking out files:  66% (1378/2087)   Checking out files:  67% (1399/2087)   Checking out files:  68% (1420/2087)   Checking out files:  69% (1441/2087)   Checking out files:  70% (1461/2087)   Checking out files:  71% (1482/2087)   Checking out files:  72% (1503/2087)   Checking out files:  73% (1524/2087)   Checking out files:  74% (1545/2087)   Checking out files:  75% (1566/2087)   Checking out files:  76% (1587/2087)   Checking out files:  77% (1607/2087)   Checking out files:  78% (1628/2087)   Checking out files:  79% (1649/2087)   Checking out files:  80% (1670/2087)   Checking out files:  81% (1691/2087)   Checking out files:  82% (1712/2087)   Checking out files:  83% (1733/2087)   Checking out files:  84% (1754/2087)   Checking out files:  85% (1774/2087)   Checking out files:  86% (1795/2087)   Checking out files:  87% (1816/2087)   Checking out files:  88% (1837/2087)   Checking out files:  88% (1848/2087)   Checking out files:  89% (1858/2087)   Checking out files:  90% (1879/2087)   Checking out files:  91% (1900/2087)   Checking out files:  92% (1921/2087)   Checking out files:  93% (1941/2087)   Checking out files:  94% (1962/2087)   Checking out files:  95% (1983/2087)   Checking out files:  96% (2004/2087)   Checking out files:  97% (2025/2087)   Checking out files:  98% (2046/2087)   Checking out files:  99% (2067/2087)   Checking out files: 100% (2087/2087)   Checking out files: 100% (2087/2087), done.
Already on 'master'
Cloning into 'hacl-star'...
Checking out files:  16% (879/5263)   Checking out files:  17% (895/5263)   Checking out files:  18% (948/5263)   Checking out files:  19% (1000/5263)   Checking out files:  20% (1053/5263)   Checking out files:  21% (1106/5263)   Checking out files:  22% (1158/5263)   Checking out files:  23% (1211/5263)   Checking out files:  24% (1264/5263)   Checking out files:  25% (1316/5263)   Checking out files:  26% (1369/5263)   Checking out files:  27% (1422/5263)   Checking out files:  28% (1474/5263)   Checking out files:  29% (1527/5263)   Checking out files:  30% (1579/5263)   Checking out files:  31% (1632/5263)   Checking out files:  32% (1685/5263)   Checking out files:  33% (1737/5263)   Checking out files:  34% (1790/5263)   Checking out files:  34% (1810/5263)   Checking out files:  35% (1843/5263)   Checking out files:  36% (1895/5263)   Checking out files:  37% (1948/5263)   Checking out files:  38% (2000/5263)   Checking out files:  39% (2053/5263)   Checking out files:  40% (2106/5263)   Checking out files:  41% (2158/5263)   Checking out files:  42% (2211/5263)   Checking out files:  43% (2264/5263)   Checking out files:  44% (2316/5263)   Checking out files:  45% (2369/5263)   Checking out files:  46% (2421/5263)   Checking out files:  47% (2474/5263)   Checking out files:  48% (2527/5263)   Checking out files:  49% (2579/5263)   Checking out files:  50% (2632/5263)   Checking out files:  50% (2642/5263)   Checking out files:  51% (2685/5263)   Checking out files:  52% (2737/5263)   Checking out files:  53% (2790/5263)   Checking out files:  54% (2843/5263)   Checking out files:  55% (2895/5263)   Checking out files:  56% (2948/5263)   Checking out files:  57% (3000/5263)   Checking out files:  58% (3053/5263)   Checking out files:  59% (3106/5263)   Checking out files:  60% (3158/5263)   Checking out files:  61% (3211/5263)   Checking out files:  62% (3264/5263)   Checking out files:  63% (3316/5263)   Checking out files:  64% (3369/5263)   Checking out files:  65% (3421/5263)   Checking out files:  66% (3474/5263)   Checking out files:  67% (3527/5263)   Checking out files:  67% (3542/5263)   Checking out files:  68% (3579/5263)   Checking out files:  69% (3632/5263)   Checking out files:  70% (3685/5263)   Checking out files:  71% (3737/5263)   Checking out files:  72% (3790/5263)   Checking out files:  73% (3842/5263)   Checking out files:  74% (3895/5263)   Checking out files:  75% (3948/5263)   Checking out files:  76% (4000/5263)   Checking out files:  77% (4053/5263)   Checking out files:  78% (4106/5263)   Checking out files:  79% (4158/5263)   Checking out files:  80% (4211/5263)   Checking out files:  81% (4264/5263)   Checking out files:  82% (4316/5263)   Checking out files:  83% (4369/5263)   Checking out files:  84% (4421/5263)   Checking out files:  85% (4474/5263)   Checking out files:  86% (4527/5263)   Checking out files:  87% (4579/5263)   Checking out files:  88% (4632/5263)   Checking out files:  89% (4685/5263)   Checking out files:  90% (4737/5263)   Checking out files:  91% (4790/5263)   Checking out files:  92% (4842/5263)   Checking out files:  93% (4895/5263)   Checking out files:  94% (4948/5263)   Checking out files:  95% (5000/5263)   Checking out files:  96% (5053/5263)   Checking out files:  97% (5106/5263)   Checking out files:  98% (5158/5263)   Checking out files:  99% (5211/5263)   Checking out files: 100% (5263/5263)   Checking out files: 100% (5263/5263), done.
Already on 'master'
Cloning into 'kremlin'...
Already on 'master'
Checking out files:  19% (904/4559)   Checking out files:  20% (912/4559)   Checking out files:  21% (958/4559)   Checking out files:  22% (1003/4559)   Checking out files:  23% (1049/4559)   Checking out files:  24% (1095/4559)   Checking out files:  25% (1140/4559)   Checking out files:  26% (1186/4559)   Checking out files:  27% (1231/4559)   Checking out files:  28% (1277/4559)   Checking out files:  29% (1323/4559)   Checking out files:  30% (1368/4559)   Checking out files:  31% (1414/4559)   Checking out files:  32% (1459/4559)   Checking out files:  33% (1505/4559)   Checking out files:  34% (1551/4559)   Checking out files:  35% (1596/4559)   Checking out files:  36% (1642/4559)   Checking out files:  37% (1687/4559)   Checking out files:  37% (1707/4559)   Checking out files:  38% (1733/4559)   Checking out files:  39% (1779/4559)   Checking out files:  40% (1824/4559)   Checking out files:  41% (1870/4559)   Checking out files:  42% (1915/4559)   Checking out files:  43% (1961/4559)   Checking out files:  44% (2006/4559)   Checking out files:  45% (2052/4559)   Checking out files:  46% (2098/4559)   Checking out files:  47% (2143/4559)   Checking out files:  48% (2189/4559)   Checking out files:  49% (2234/4559)   Checking out files:  50% (2280/4559)   Checking out files:  51% (2326/4559)   Checking out files:  52% (2371/4559)   Checking out files:  53% (2417/4559)   Checking out files:  54% (2462/4559)   Checking out files:  55% (2508/4559)   Checking out files:  56% (2554/4559)   Checking out files:  56% (2589/4559)   Checking out files:  57% (2599/4559)   Checking out files:  58% (2645/4559)   Checking out files:  59% (2690/4559)   Checking out files:  60% (2736/4559)   Checking out files:  61% (2781/4559)   Checking out files:  62% (2827/4559)   Checking out files:  63% (2873/4559)   Checking out files:  64% (2918/4559)   Checking out files:  65% (2964/4559)   Checking out files:  66% (3009/4559)   Checking out files:  67% (3055/4559)   Checking out files:  68% (3101/4559)   Checking out files:  69% (3146/4559)   Checking out files:  70% (3192/4559)   Checking out files:  71% (3237/4559)   Checking out files:  72% (3283/4559)   Checking out files:  73% (3329/4559)   Checking out files:  74% (3374/4559)   Checking out files:  75% (3420/4559)   Checking out files:  76% (3465/4559)   Checking out files:  76% (3508/4559)   Checking out files:  77% (3511/4559)   Checking out files:  78% (3557/4559)   Checking out files:  79% (3602/4559)   Checking out files:  80% (3648/4559)   Checking out files:  81% (3693/4559)   Checking out files:  82% (3739/4559)   Checking out files:  83% (3784/4559)   Checking out files:  84% (3830/4559)   Checking out files:  85% (3876/4559)   Checking out files:  86% (3921/4559)   Checking out files:  87% (3967/4559)   Checking out files:  88% (4012/4559)   Checking out files:  89% (4058/4559)   Checking out files:  90% (4104/4559)   Checking out files:  91% (4149/4559)   Checking out files:  92% (4195/4559)   Checking out files:  93% (4240/4559)   Checking out files:  94% (4286/4559)   Checking out files:  95% (4332/4559)   Checking out files:  96% (4377/4559)   Checking out files:  96% (4395/4559)   Checking out files:  97% (4423/4559)   Checking out files:  98% (4468/4559)   Checking out files:  99% (4514/4559)   Checking out files: 100% (4559/4559)   Checking out files: 100% (4559/4559), done.
Warning: you are using the standard library and/or the %inline keyword. We
recommend switching on --infer in order to avoid obscure type error messages.
dos2unix: converting file parse.mly to Unix format...
File "src/basic/ml/FStar_Util.ml", line 49, characters 57-65:
Warning 40: st_mtime was selected from type BatUnix.stats.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "src/basic/ml/FStar_Util.ml", line 49, characters 57-65:
Warning 40: st_mtime was selected from type BatUnix.stats.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
Warning 7: : After inlining, Hacl.Cast.sint8_to_sint128 (going into Hacl_Cast) calls FStar.Int.Cast.Full.uint64_to_uint128 (going into FStar) -- removing the static qualifier from FStar.Int.Cast.Full.uint64_to_uint128
Warning 7: : After inlining, Hacl.Cast.sint128_to_sint64 (going into Hacl_Cast) calls FStar.Int.Cast.Full.uint128_to_uint64 (going into FStar) -- removing the static qualifier from FStar.Int.Cast.Full.uint128_to_uint64
Warning 7: : After inlining, Hacl.Cast.sint8_to_sint128 (going into Hacl_Cast) calls FStar.Int.Cast.Full.uint64_to_uint128 (going into FStar) -- removing the static qualifier from FStar.Int.Cast.Full.uint64_to_uint128
Warning 7: : After inlining, Hacl.Cast.sint128_to_sint64 (going into Hacl_Cast) calls FStar.Int.Cast.Full.uint128_to_uint64 (going into FStar) -- removing the static qualifier from FStar.Int.Cast.Full.uint128_to_uint64
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.HMAC.SHA2_256.test_1, in file Hacl_Test_HMAC_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of key1, after the definition of key_len1, in the last element of the sequence, in top-level declaration Hacl.Test.HMAC.SHA2_256.test_1, in file Hacl_Test_HMAC_SHA2_256: stack newbuf 0x0buint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.HMAC.SHA2_256.test_2, in file Hacl_Test_HMAC_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.HMAC.SHA2_256.test_3, in file Hacl_Test_HMAC_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of key1, after the definition of key_len1, in the last element of the sequence, in top-level declaration Hacl.Test.HMAC.SHA2_256.test_3, in file Hacl_Test_HMAC_SHA2_256: stack newbuf 0xaauint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of data, after the definition of data_len, in the last element of the sequence, in top-level declaration Hacl.Test.HMAC.SHA2_256.test_3, in file Hacl_Test_HMAC_SHA2_256: stack newbuf 0xdduint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.HMAC.SHA2_256.test_4, in file Hacl_Test_HMAC_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of data, after the definition of data_len, in the last element of the sequence, in top-level declaration Hacl.Test.HMAC.SHA2_256.test_4, in file Hacl_Test_HMAC_SHA2_256: stack newbuf 0xcduint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.HMAC.SHA2_256.test_5, in file Hacl_Test_HMAC_SHA2_256: stack newbuf 0x00uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of key, after the definition of key_len, in the last element of the sequence, in top-level declaration Hacl.Test.HMAC.SHA2_256.test_5, in file Hacl_Test_HMAC_SHA2_256: stack newbuf 0x0cuint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.HMAC.SHA2_256.test_6, in file Hacl_Test_HMAC_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of key, after the definition of key_len, in the last element of the sequence, in top-level declaration Hacl.Test.HMAC.SHA2_256.test_6, in file Hacl_Test_HMAC_SHA2_256: stack newbuf 0xaauint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.HMAC.SHA2_256.test_7, in file Hacl_Test_HMAC_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of key, after the definition of key_len, in the last element of the sequence, in top-level declaration Hacl.Test.HMAC.SHA2_256.test_7, in file Hacl_Test_HMAC_SHA2_256: stack newbuf 0xaauint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 7: : After inlining, Hacl.Bignum.Modulo.carry_top_wide (going into Poly1305_64) calls FStar.Int.Cast.Full.uint64_to_uint128 (going into FStar) -- removing the static qualifier from FStar.Int.Cast.Full.uint64_to_uint128
Warning 7: : After inlining, Hacl.Bignum.Modulo.carry_top_wide (going into Poly1305_64) calls FStar.Int.Cast.Full.uint128_to_uint64 (going into FStar) -- removing the static qualifier from FStar.Int.Cast.Full.uint128_to_uint64
Warning 7: : After inlining, Hacl.Bignum.Modulo.carry_top_wide (going into AEAD_Poly1305_64) calls FStar.Int.Cast.Full.uint64_to_uint128 (going into FStar) -- removing the static qualifier from FStar.Int.Cast.Full.uint64_to_uint128
Warning 7: : After inlining, Hacl.Bignum.Modulo.carry_top_wide (going into AEAD_Poly1305_64) calls FStar.Int.Cast.Full.uint128_to_uint64 (going into FStar) -- removing the static qualifier from FStar.Int.Cast.Full.uint128_to_uint64
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.HMAC.SHA2_256.test_1, in file Hacl_Test_HMAC_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of key1, after the definition of key_len1, in the last element of the sequence, in top-level declaration Hacl.Test.HMAC.SHA2_256.test_1, in file Hacl_Test_HMAC_SHA2_256: stack newbuf 0x0buint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.HMAC.SHA2_256.test_2, in file Hacl_Test_HMAC_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.HMAC.SHA2_256.test_3, in file Hacl_Test_HMAC_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of key1, after the definition of key_len1, in the last element of the sequence, in top-level declaration Hacl.Test.HMAC.SHA2_256.test_3, in file Hacl_Test_HMAC_SHA2_256: stack newbuf 0xaauint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of data, after the definition of data_len, in the last element of the sequence, in top-level declaration Hacl.Test.HMAC.SHA2_256.test_3, in file Hacl_Test_HMAC_SHA2_256: stack newbuf 0xdduint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.HMAC.SHA2_256.test_4, in file Hacl_Test_HMAC_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of data, after the definition of data_len, in the last element of the sequence, in top-level declaration Hacl.Test.HMAC.SHA2_256.test_4, in file Hacl_Test_HMAC_SHA2_256: stack newbuf 0xcduint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.HMAC.SHA2_256.test_5, in file Hacl_Test_HMAC_SHA2_256: stack newbuf 0x00uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of key, after the definition of key_len, in the last element of the sequence, in top-level declaration Hacl.Test.HMAC.SHA2_256.test_5, in file Hacl_Test_HMAC_SHA2_256: stack newbuf 0x0cuint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.HMAC.SHA2_256.test_6, in file Hacl_Test_HMAC_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of key, after the definition of key_len, in the last element of the sequence, in top-level declaration Hacl.Test.HMAC.SHA2_256.test_6, in file Hacl_Test_HMAC_SHA2_256: stack newbuf 0xaauint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.HMAC.SHA2_256.test_7, in file Hacl_Test_HMAC_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of key, after the definition of key_len, in the last element of the sequence, in top-level declaration Hacl.Test.HMAC.SHA2_256.test_7, in file Hacl_Test_HMAC_SHA2_256: stack newbuf 0xaauint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 7: : After inlining, Hacl.Bignum.Modulo.carry_top_wide (going into Curve25519) calls FStar.Int.Cast.Full.uint128_to_uint64 (going into FStar) -- removing the static qualifier from FStar.Int.Cast.Full.uint128_to_uint64
Warning 7: : After inlining, Hacl.Bignum.Modulo.carry_top_wide (going into Curve25519) calls FStar.Int.Cast.Full.uint64_to_uint128 (going into FStar) -- removing the static qualifier from FStar.Int.Cast.Full.uint64_to_uint128
Warning 7: : After inlining, Hacl.Test.X25519.main (going into Hacl_Test_X25519) calls Hacl.EC.crypto_scalarmult (going into Curve25519) -- removing the static qualifier from Hacl.EC.crypto_scalarmult
Warning 7: : After inlining, Hacl.Bignum.Modulo.carry_top_wide (going into Curve25519) calls FStar.Int.Cast.Full.uint128_to_uint64 (going into FStar) -- removing the static qualifier from FStar.Int.Cast.Full.uint128_to_uint64
Warning 7: : After inlining, Hacl.Bignum.Modulo.carry_top_wide (going into Curve25519) calls FStar.Int.Cast.Full.uint64_to_uint128 (going into FStar) -- removing the static qualifier from FStar.Int.Cast.Full.uint64_to_uint128
Warning 7: : After inlining, Hacl.Test.X25519.main (going into Hacl_Test_X25519) calls Hacl.EC.crypto_scalarmult (going into Curve25519) -- removing the static qualifier from Hacl.EC.crypto_scalarmult
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_1a, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_1a, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_1b, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_1b, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_2a, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_2a, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_2b, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_2b, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_3a, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_3a, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_3b, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_3b, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_4a, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_4a, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_4b, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_4b, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_5, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of plaintext, after the definition of plaintext_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_5, in file Hacl_Test_SHA2_256: stack newbuf 0x61uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_5, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_6, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_6, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_1a, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of state, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_1a, in file Hacl_Test_SHA2_384: stack newbuf 0uint64 SHA2_384.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_1b, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_2a, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of state, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_2a, in file Hacl_Test_SHA2_384: stack newbuf 0uint64 SHA2_384.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_2b, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_3a, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of state, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_3a, in file Hacl_Test_SHA2_384: stack newbuf 0uint64 SHA2_384.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_3b, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_4a, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of state, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_4a, in file Hacl_Test_SHA2_384: stack newbuf 0uint64 SHA2_384.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_4b, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_5, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of plaintext, after the definition of plaintext_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_5, in file Hacl_Test_SHA2_384: stack newbuf 0x61uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_6, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of state, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_6, in file Hacl_Test_SHA2_384: stack newbuf 0uint64 SHA2_384.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_1a, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_1b, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_2a, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_2b, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_3a, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_3b, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_4a, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_4b, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_5, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of plaintext, after the definition of plaintext_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_5, in file Hacl_Test_SHA2_512: stack newbuf 0x61uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_6, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 7: : After inlining, Hacl.Hash.SHA2_384.u32_to_h128 (going into Hacl_Hash_SHA2_384) calls FStar.Int.Cast.Full.uint64_to_uint128 (going into FStar) -- removing the static qualifier from FStar.Int.Cast.Full.uint64_to_uint128
Warning 7: : After inlining, Hacl.Hash.SHA2_384.update (going into Hacl_Hash_SHA2_384) calls Hacl.Hash.Lib.LoadStore.uint64s_from_be_bytes (going into SHA2_256) -- removing the static qualifier from Hacl.Hash.Lib.LoadStore.uint64s_from_be_bytes
Warning 7: : After inlining, Hacl.Hash.SHA2_384.finish_core (going into Hacl_Hash_SHA2_384) calls Hacl.Hash.Lib.LoadStore.uint64s_to_be_bytes (going into SHA2_256) -- removing the static qualifier from Hacl.Hash.Lib.LoadStore.uint64s_to_be_bytes
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_1a, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_1a, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_1b, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_1b, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_2a, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_2a, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_2b, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_2b, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_3a, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_3a, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_3b, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_3b, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_4a, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_4a, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_4b, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_4b, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_5, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of plaintext, after the definition of plaintext_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_5, in file Hacl_Test_SHA2_256: stack newbuf 0x61uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_5, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_6, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_6, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_1a, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of state, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_1a, in file Hacl_Test_SHA2_384: stack newbuf 0uint64 SHA2_384.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_1b, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_2a, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of state, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_2a, in file Hacl_Test_SHA2_384: stack newbuf 0uint64 SHA2_384.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_2b, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_3a, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of state, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_3a, in file Hacl_Test_SHA2_384: stack newbuf 0uint64 SHA2_384.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_3b, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_4a, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of state, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_4a, in file Hacl_Test_SHA2_384: stack newbuf 0uint64 SHA2_384.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_4b, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_5, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of plaintext, after the definition of plaintext_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_5, in file Hacl_Test_SHA2_384: stack newbuf 0x61uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_6, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of state, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_6, in file Hacl_Test_SHA2_384: stack newbuf 0uint64 SHA2_384.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_1a, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_1b, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_2a, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_2b, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_3a, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_3b, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_4a, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_4b, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_5, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of plaintext, after the definition of plaintext_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_5, in file Hacl_Test_SHA2_512: stack newbuf 0x61uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_6, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 7: : After inlining, Hacl.Hash.SHA2_384.pad (going into SHA2_384) calls FStar.Int.Cast.Full.uint64_to_uint128 (going into FStar) -- removing the static qualifier from FStar.Int.Cast.Full.uint64_to_uint128
Warning 7: : After inlining, Hacl.Hash.SHA2_256.update (going into Hacl_Hash_SHA2_256) calls Hacl.Hash.Lib.LoadStore.uint32s_from_be_bytes (going into SHA2_384) -- removing the static qualifier from Hacl.Hash.Lib.LoadStore.uint32s_from_be_bytes
Warning 7: : After inlining, Hacl.Hash.SHA2_256.finish_core (going into Hacl_Hash_SHA2_256) calls Hacl.Hash.Lib.LoadStore.uint32s_to_be_bytes (going into SHA2_384) -- removing the static qualifier from Hacl.Hash.Lib.LoadStore.uint32s_to_be_bytes
Warning 7: : After inlining, Hacl.Hash.SHA2_512.update (going into Hacl_Hash_SHA2_512) calls Hacl.Hash.Lib.LoadStore.uint64s_from_be_bytes (going into SHA2_384) -- removing the static qualifier from Hacl.Hash.Lib.LoadStore.uint64s_from_be_bytes
Warning 7: : After inlining, Hacl.Hash.SHA2_512.finish_core (going into Hacl_Hash_SHA2_512) calls Hacl.Hash.Lib.LoadStore.uint64s_to_be_bytes (going into SHA2_384) -- removing the static qualifier from Hacl.Hash.Lib.LoadStore.uint64s_to_be_bytes
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_1a, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_1a, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_1b, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_1b, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_2a, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_2a, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_2b, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_2b, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_3a, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_3a, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_3b, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_3b, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_4a, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_4a, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_4b, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_4b, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_5, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of plaintext, after the definition of plaintext_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_5, in file Hacl_Test_SHA2_256: stack newbuf 0x61uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_5, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_6, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_6, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_1a, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of state, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_1a, in file Hacl_Test_SHA2_384: stack newbuf 0uint64 SHA2_384.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_1b, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_2a, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of state, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_2a, in file Hacl_Test_SHA2_384: stack newbuf 0uint64 SHA2_384.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_2b, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_3a, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of state, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_3a, in file Hacl_Test_SHA2_384: stack newbuf 0uint64 SHA2_384.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_3b, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_4a, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of state, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_4a, in file Hacl_Test_SHA2_384: stack newbuf 0uint64 SHA2_384.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_4b, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_5, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of plaintext, after the definition of plaintext_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_5, in file Hacl_Test_SHA2_384: stack newbuf 0x61uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_6, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of state, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_6, in file Hacl_Test_SHA2_384: stack newbuf 0uint64 SHA2_384.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_1a, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_1b, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_2a, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_2b, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_3a, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_3b, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_4a, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_4b, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_5, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of plaintext, after the definition of plaintext_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_5, in file Hacl_Test_SHA2_512: stack newbuf 0x61uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_6, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 7: : After inlining, Hacl.Hash.SHA2_384.u32_to_h128 (going into Hacl_Hash_SHA2_384) calls FStar.Int.Cast.Full.uint64_to_uint128 (going into FStar) -- removing the static qualifier from FStar.Int.Cast.Full.uint64_to_uint128
Warning 7: : After inlining, Hacl.Hash.SHA2_384.update (going into Hacl_Hash_SHA2_384) calls Hacl.Hash.Lib.LoadStore.uint64s_from_be_bytes (going into SHA2_256) -- removing the static qualifier from Hacl.Hash.Lib.LoadStore.uint64s_from_be_bytes
Warning 7: : After inlining, Hacl.Hash.SHA2_384.finish_core (going into Hacl_Hash_SHA2_384) calls Hacl.Hash.Lib.LoadStore.uint64s_to_be_bytes (going into SHA2_256) -- removing the static qualifier from Hacl.Hash.Lib.LoadStore.uint64s_to_be_bytes
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_1a, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_1a, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_1b, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_1b, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_2a, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_2a, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_2b, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_2b, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_3a, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_3a, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_3b, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_3b, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_4a, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_4a, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_4b, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_4b, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_5, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of plaintext, after the definition of plaintext_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_5, in file Hacl_Test_SHA2_256: stack newbuf 0x61uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_5, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_6, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_6, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_1a, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of state, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_1a, in file Hacl_Test_SHA2_384: stack newbuf 0uint64 SHA2_384.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_1b, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_2a, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of state, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_2a, in file Hacl_Test_SHA2_384: stack newbuf 0uint64 SHA2_384.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_2b, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_3a, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of state, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_3a, in file Hacl_Test_SHA2_384: stack newbuf 0uint64 SHA2_384.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_3b, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_4a, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of state, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_4a, in file Hacl_Test_SHA2_384: stack newbuf 0uint64 SHA2_384.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_4b, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_5, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of plaintext, after the definition of plaintext_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_5, in file Hacl_Test_SHA2_384: stack newbuf 0x61uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_6, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of state, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_6, in file Hacl_Test_SHA2_384: stack newbuf 0uint64 SHA2_384.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_1a, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_1b, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_2a, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_2b, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_3a, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_3b, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_4a, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_4b, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_5, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of plaintext, after the definition of plaintext_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_5, in file Hacl_Test_SHA2_512: stack newbuf 0x61uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_6, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 7: : After inlining, Hacl.Hash.SHA2_384.pad (going into SHA2_384) calls FStar.Int.Cast.Full.uint64_to_uint128 (going into FStar) -- removing the static qualifier from FStar.Int.Cast.Full.uint64_to_uint128
Warning 7: : After inlining, Hacl.Hash.SHA2_256.update (going into Hacl_Hash_SHA2_256) calls Hacl.Hash.Lib.LoadStore.uint32s_from_be_bytes (going into SHA2_384) -- removing the static qualifier from Hacl.Hash.Lib.LoadStore.uint32s_from_be_bytes
Warning 7: : After inlining, Hacl.Hash.SHA2_256.finish_core (going into Hacl_Hash_SHA2_256) calls Hacl.Hash.Lib.LoadStore.uint32s_to_be_bytes (going into SHA2_384) -- removing the static qualifier from Hacl.Hash.Lib.LoadStore.uint32s_to_be_bytes
Warning 7: : After inlining, Hacl.Hash.SHA2_512.update (going into Hacl_Hash_SHA2_512) calls Hacl.Hash.Lib.LoadStore.uint64s_from_be_bytes (going into SHA2_384) -- removing the static qualifier from Hacl.Hash.Lib.LoadStore.uint64s_from_be_bytes
Warning 7: : After inlining, Hacl.Hash.SHA2_512.finish_core (going into Hacl_Hash_SHA2_512) calls Hacl.Hash.Lib.LoadStore.uint64s_to_be_bytes (going into SHA2_384) -- removing the static qualifier from Hacl.Hash.Lib.LoadStore.uint64s_to_be_bytes
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_1a, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_1a, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_1b, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_1b, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_2a, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_2a, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_2b, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_2b, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_3a, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_3a, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_3b, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_3b, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_4a, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_4a, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_4b, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_4b, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_5, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of plaintext, after the definition of plaintext_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_5, in file Hacl_Test_SHA2_256: stack newbuf 0x61uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_5, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_6, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_6, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_1a, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of state, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_1a, in file Hacl_Test_SHA2_384: stack newbuf 0uint64 SHA2_384.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_1b, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_2a, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of state, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_2a, in file Hacl_Test_SHA2_384: stack newbuf 0uint64 SHA2_384.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_2b, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_3a, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of state, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_3a, in file Hacl_Test_SHA2_384: stack newbuf 0uint64 SHA2_384.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_3b, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_4a, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of state, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_4a, in file Hacl_Test_SHA2_384: stack newbuf 0uint64 SHA2_384.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_4b, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_5, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of plaintext, after the definition of plaintext_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_5, in file Hacl_Test_SHA2_384: stack newbuf 0x61uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_6, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of state, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_6, in file Hacl_Test_SHA2_384: stack newbuf 0uint64 SHA2_384.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_1a, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_1b, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_2a, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_2b, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_3a, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_3b, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_4a, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_4b, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_5, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of plaintext, after the definition of plaintext_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_5, in file Hacl_Test_SHA2_512: stack newbuf 0x61uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_6, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 7: : After inlining, Hacl.Hash.SHA2_512.pad (going into SHA2_512) calls FStar.Int.Cast.Full.uint64_to_uint128 (going into FStar) -- removing the static qualifier from FStar.Int.Cast.Full.uint64_to_uint128
Warning 7: : After inlining, Hacl.Hash.SHA2_256.update (going into Hacl_Hash_SHA2_256) calls Hacl.Hash.Lib.LoadStore.uint32s_from_be_bytes (going into SHA2_512) -- removing the static qualifier from Hacl.Hash.Lib.LoadStore.uint32s_from_be_bytes
Warning 7: : After inlining, Hacl.Hash.SHA2_256.finish_core (going into Hacl_Hash_SHA2_256) calls Hacl.Hash.Lib.LoadStore.uint32s_to_be_bytes (going into SHA2_512) -- removing the static qualifier from Hacl.Hash.Lib.LoadStore.uint32s_to_be_bytes
Warning 7: : After inlining, Hacl.Hash.SHA2_384.update (going into Hacl_Hash_SHA2_384) calls Hacl.Hash.Lib.LoadStore.uint64s_from_be_bytes (going into SHA2_512) -- removing the static qualifier from Hacl.Hash.Lib.LoadStore.uint64s_from_be_bytes
Warning 7: : After inlining, Hacl.Hash.SHA2_384.finish_core (going into Hacl_Hash_SHA2_384) calls Hacl.Hash.Lib.LoadStore.uint64s_to_be_bytes (going into SHA2_512) -- removing the static qualifier from Hacl.Hash.Lib.LoadStore.uint64s_to_be_bytes
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_1a, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_1a, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_1b, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_1b, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_2a, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_2a, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_2b, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_2b, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_3a, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_3a, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_3b, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_3b, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_4a, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_4a, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_4b, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_4b, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_5, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of plaintext, after the definition of plaintext_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_5, in file Hacl_Test_SHA2_256: stack newbuf 0x61uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_5, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_6, in file Hacl_Test_SHA2_256: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of ctx, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_256.test_6, in file Hacl_Test_SHA2_256: stack newbuf 0uint32 SHA2_256.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_1a, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of state, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_1a, in file Hacl_Test_SHA2_384: stack newbuf 0uint64 SHA2_384.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_1b, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_2a, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of state, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_2a, in file Hacl_Test_SHA2_384: stack newbuf 0uint64 SHA2_384.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_2b, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_3a, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of state, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_3a, in file Hacl_Test_SHA2_384: stack newbuf 0uint64 SHA2_384.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_3b, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_4a, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of state, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_4a, in file Hacl_Test_SHA2_384: stack newbuf 0uint64 SHA2_384.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_4b, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_5, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of plaintext, after the definition of plaintext_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_5, in file Hacl_Test_SHA2_384: stack newbuf 0x61uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_6, in file Hacl_Test_SHA2_384: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of state, after the definition of expected, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_384.test_6, in file Hacl_Test_SHA2_384: stack newbuf 0uint64 SHA2_384.size_state is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_1a, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_1b, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_2a, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_2b, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_3a, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_3b, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_4a, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_4b, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_5, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of plaintext, after the definition of plaintext_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_5, in file Hacl_Test_SHA2_512: stack newbuf 0x61uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of output, after the definition of output_len, in the last element of the sequence, in top-level declaration Hacl.Test.SHA2_512.test_6, in file Hacl_Test_SHA2_512: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 7: : After inlining, Hacl.Hash.SHA2_512.pad (going into SHA2_512) calls FStar.Int.Cast.Full.uint64_to_uint128 (going into FStar) -- removing the static qualifier from FStar.Int.Cast.Full.uint64_to_uint128
Warning 7: : After inlining, Hacl.Hash.SHA2_256.update (going into Hacl_Hash_SHA2_256) calls Hacl.Hash.Lib.LoadStore.uint32s_from_be_bytes (going into SHA2_512) -- removing the static qualifier from Hacl.Hash.Lib.LoadStore.uint32s_from_be_bytes
Warning 7: : After inlining, Hacl.Hash.SHA2_256.finish_core (going into Hacl_Hash_SHA2_256) calls Hacl.Hash.Lib.LoadStore.uint32s_to_be_bytes (going into SHA2_512) -- removing the static qualifier from Hacl.Hash.Lib.LoadStore.uint32s_to_be_bytes
Warning 7: : After inlining, Hacl.Hash.SHA2_384.update (going into Hacl_Hash_SHA2_384) calls Hacl.Hash.Lib.LoadStore.uint64s_from_be_bytes (going into SHA2_512) -- removing the static qualifier from Hacl.Hash.Lib.LoadStore.uint64s_from_be_bytes
Warning 7: : After inlining, Hacl.Hash.SHA2_384.finish_core (going into Hacl_Hash_SHA2_384) calls Hacl.Hash.Lib.LoadStore.uint64s_to_be_bytes (going into SHA2_512) -- removing the static qualifier from Hacl.Hash.Lib.LoadStore.uint64s_to_be_bytes
Warning 7: : After inlining, Hacl.Bignum.Modulo.carry_top_wide (going into Ed25519) calls FStar.Int.Cast.Full.uint128_to_uint64 (going into FStar) -- removing the static qualifier from FStar.Int.Cast.Full.uint128_to_uint64
Warning 7: : After inlining, Hacl.Bignum.Modulo.carry_top_wide (going into Ed25519) calls FStar.Int.Cast.Full.uint64_to_uint128 (going into FStar) -- removing the static qualifier from FStar.Int.Cast.Full.uint64_to_uint128
./everest: line 678: nuget: command not found
File "CoreCrypto.ml", line 526, characters 24-144:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
ECC_X448
Submodule 'ucontrib/CoreCrypto/ml/openssl' (https://github.com/openssl/openssl) registered for path 'openssl'
Cloning into '/cygdrive/c/Build/Agent2/_work/8/s/FStar/ucontrib/CoreCrypto/ml/openssl'...
crypto/asn1/x_int64.c: In function 'uint64_print':
crypto/asn1/x_int64.c:105:32: warning: unknown conversion type character 'j' in format [-Wformat=]
return BIO_printf(out, "%jd\n", **(int64_t **)pval);
^
crypto/asn1/x_int64.c:105:32: warning: too many arguments for format [-Wformat-extra-args]
crypto/asn1/x_int64.c:106:28: warning: unknown conversion type character 'j' in format [-Wformat=]
return BIO_printf(out, "%ju\n", **(uint64_t **)pval);
^
crypto/asn1/x_int64.c:106:28: warning: too many arguments for format [-Wformat-extra-args]
crypto/bio/b_sock.c: In function 'BIO_get_accept_socket':
crypto/bio/b_sock.c:211:13: warning: overflow in implicit constant conversion [-Woverflow]
int s = INVALID_SOCKET;
^
crypto/bio/b_sock.c:216:16: warning: overflow in implicit constant conversion [-Woverflow]
return INVALID_SOCKET;
^
crypto/bio/b_sock.c:219:16: warning: overflow in implicit constant conversion [-Woverflow]
return INVALID_SOCKET;
^
crypto/bio/b_sock.c:226:13: warning: overflow in implicit constant conversion [-Woverflow]
s = INVALID_SOCKET;
^
crypto/bio/b_sock.c:233:13: warning: overflow in implicit constant conversion [-Woverflow]
s = INVALID_SOCKET;
^
crypto/bio/b_sock2.c: In function 'BIO_socket':
crypto/bio/b_sock2.c:45:16: warning: overflow in implicit constant conversion [-Woverflow]
return INVALID_SOCKET;
^
crypto/bio/b_sock2.c:51:16: warning: overflow in implicit constant conversion [-Woverflow]
return INVALID_SOCKET;
^
crypto/bio/b_sock2.c: In function 'BIO_connect':
crypto/bio/b_sock2.c:90:56: warning: passing argument 4 of 'setsockopt' from incompatible pointer type [-Wincompatible-pointer-types]
if (setsockopt(sock, SOL_SOCKET, SO_KEEPALIVE, &on, sizeof(on)) != 0) {
^
In file included from ./e_os.h:218:0,
from crypto/bio/bio_lcl.h:11,
from crypto/bio/b_sock2.c:14:
/usr/x86_64-w64-mingw32/sys-root/mingw/include/winsock2.h:999:34: note: expected 'const char *' but argument is of type 'int *'
WINSOCK_API_LINKAGE int WSAAPI setsockopt(SOCKET s,int level,int optname,const char *optval,int optlen);
^
crypto/bio/b_sock2.c:98:56: warning: passing argument 4 of 'setsockopt' from incompatible pointer type [-Wincompatible-pointer-types]
if (setsockopt(sock, IPPROTO_TCP, TCP_NODELAY, &on, sizeof(on)) != 0) {
^
In file included from ./e_os.h:218:0,
from crypto/bio/bio_lcl.h:11,
from crypto/bio/b_sock2.c:14:
/usr/x86_64-w64-mingw32/sys-root/mingw/include/winsock2.h:999:34: note: expected 'const char *' but argument is of type 'int *'
WINSOCK_API_LINKAGE int WSAAPI setsockopt(SOCKET s,int level,int optname,const char *optval,int optlen);
^
crypto/bio/b_sock2.c: In function 'BIO_listen':
crypto/bio/b_sock2.c:164:47: warning: passing argument 4 of 'getsockopt' from incompatible pointer type [-Wincompatible-pointer-types]
if (getsockopt(sock, SOL_SOCKET, SO_TYPE, &socktype, &socktype_len) != 0
^
In file included from ./e_os.h:218:0,
from crypto/bio/bio_lcl.h:11,
from crypto/bio/b_sock2.c:14:
/usr/x86_64-w64-mingw32/sys-root/mingw/include/winsock2.h:980:34: note: expected 'char *' but argument is of type 'int *'
WINSOCK_API_LINKAGE int WSAAPI getsockopt(SOCKET s,int level,int optname,char *optval,int *optlen);
^
crypto/bio/b_sock2.c:187:56: warning: passing argument 4 of 'setsockopt' from incompatible pointer type [-Wincompatible-pointer-types]
if (setsockopt(sock, SOL_SOCKET, SO_KEEPALIVE, &on, sizeof(on)) != 0) {
^
In file included from ./e_os.h:218:0,
from crypto/bio/bio_lcl.h:11,
from crypto/bio/b_sock2.c:14:
/usr/x86_64-w64-mingw32/sys-root/mingw/include/winsock2.h:999:34: note: expected 'const char *' but argument is of type 'int *'
WINSOCK_API_LINKAGE int WSAAPI setsockopt(SOCKET s,int level,int optname,const char *optval,int optlen);
^
crypto/bio/b_sock2.c:195:56: warning: passing argument 4 of 'setsockopt' from incompatible pointer type [-Wincompatible-pointer-types]
if (setsockopt(sock, IPPROTO_TCP, TCP_NODELAY, &on, sizeof(on)) != 0) {
^
In file included from ./e_os.h:218:0,
from crypto/bio/bio_lcl.h:11,
from crypto/bio/b_sock2.c:14:
/usr/x86_64-w64-mingw32/sys-root/mingw/include/winsock2.h:999:34: note: expected 'const char *' but argument is of type 'int *'
WINSOCK_API_LINKAGE int WSAAPI setsockopt(SOCKET s,int level,int optname,const char *optval,int optlen);
^
crypto/bio/b_sock2.c:204:57: warning: passing argument 4 of 'setsockopt' from incompatible pointer type [-Wincompatible-pointer-types]
if (setsockopt(sock, IPPROTO_IPV6, IPV6_V6ONLY, &on, sizeof(on)) != 0) {
^
In file included from ./e_os.h:218:0,
from crypto/bio/bio_lcl.h:11,
from crypto/bio/b_sock2.c:14:
/usr/x86_64-w64-mingw32/sys-root/mingw/include/winsock2.h:999:34: note: expected 'const char *' but argument is of type 'int *'
WINSOCK_API_LINKAGE int WSAAPI setsockopt(SOCKET s,int level,int optname,const char *optval,int optlen);
^
crypto/bio/b_sock2.c: In function 'BIO_accept_ex':
crypto/bio/b_sock2.c:249:16: warning: overflow in implicit constant conversion [-Woverflow]
return INVALID_SOCKET;
^
crypto/bio/b_sock2.c:254:16: warning: overflow in implicit constant conversion [-Woverflow]
return INVALID_SOCKET;
^
In file included from crypto/bn/bn_print.c:15:0:
crypto/bn/bn_print.c: In function 'BN_bn2dec':
crypto/bn/bn_lcl.h:94:27: warning: unknown conversion type character 'l' in format [-Wformat=]
#  define BN_DEC_FMT1     "%llu"
^
crypto/bn/bn_print.c:104:37: note: in expansion of macro 'BN_DEC_FMT1'
BIO_snprintf(p, BUF_REMAIN, BN_DEC_FMT1, *lp);
^
crypto/bn/bn_lcl.h:94:27: warning: too many arguments for format [-Wformat-extra-args]
#  define BN_DEC_FMT1     "%llu"
^
crypto/bn/bn_print.c:104:37: note: in expansion of macro 'BN_DEC_FMT1'
BIO_snprintf(p, BUF_REMAIN, BN_DEC_FMT1, *lp);
^
crypto/bn/bn_lcl.h:95:27: warning: unknown conversion type character 'l' in format [-Wformat=]
#  define BN_DEC_FMT2     "%019llu"
^
crypto/bn/bn_print.c:109:41: note: in expansion of macro 'BN_DEC_FMT2'
BIO_snprintf(p, BUF_REMAIN, BN_DEC_FMT2, *lp);
^
crypto/bn/bn_lcl.h:95:27: warning: too many arguments for format [-Wformat-extra-args]
#  define BN_DEC_FMT2     "%019llu"
^
crypto/bn/bn_print.c:109:41: note: in expansion of macro 'BN_DEC_FMT2'
BIO_snprintf(p, BUF_REMAIN, BN_DEC_FMT2, *lp);
^
crypto/threads_win.c: In function 'CRYPTO_atomic_add':
crypto/threads_win.c:132:35: warning: passing argument 1 of '_InterlockedExchangeAdd' from incompatible pointer type [-Wincompatible-pointer-types]
*ret = InterlockedExchangeAdd(val, amount) + amount;
^
In file included from /usr/x86_64-w64-mingw32/sys-root/mingw/include/winnt.h:27:0,
from /usr/x86_64-w64-mingw32/sys-root/mingw/include/minwindef.h:163,
from /usr/x86_64-w64-mingw32/sys-root/mingw/include/windef.h:8,
from /usr/x86_64-w64-mingw32/sys-root/mingw/include/windows.h:69,
from crypto/threads_win.c:11:
/usr/x86_64-w64-mingw32/sys-root/mingw/include/psdk_inc/intrin-impl.h:1026:10: note: expected 'volatile long int *' but argument is of type 'int *'
__LONG32 _InterlockedExchangeAdd(__LONG32 volatile *Addend, __LONG32 Value) {
^
test/testutil/tests.c: In function 'test_size_t_eq':
test/testutil/tests.c:575:27: warning: unknown conversion type character 'z' in format [-Wformat=]
"[" fmt "] compared to [" fmt "]",            \
^
test/testutil/tests.c:581:5: note: in expansion of macro 'DEFINE_COMPARISON'
DEFINE_COMPARISON(type, name, eq, ==, fmt)                          \
^
test/testutil/tests.c:594:1: note: in expansion of macro 'DEFINE_COMPARISONS'
DEFINE_COMPARISONS(size_t, size_t, "%zu")
^
test/testutil/tests.c:575:27: warning: unknown conversion type character 'z' in format [-Wformat=]
"[" fmt "] compared to [" fmt "]",            \
^
test/testutil/tests.c:581:5: note: in expansion of macro 'DEFINE_COMPARISON'
DEFINE_COMPARISON(type, name, eq, ==, fmt)                          \
^
test/testutil/tests.c:594:1: note: in expansion of macro 'DEFINE_COMPARISONS'
DEFINE_COMPARISONS(size_t, size_t, "%zu")
^
test/testutil/tests.c:575:27: warning: too many arguments for format [-Wformat-extra-args]
"[" fmt "] compared to [" fmt "]",            \
^
test/testutil/tests.c:581:5: note: in expansion of macro 'DEFINE_COMPARISON'
DEFINE_COMPARISON(type, name, eq, ==, fmt)                          \
^
test/testutil/tests.c:594:1: note: in expansion of macro 'DEFINE_COMPARISONS'
DEFINE_COMPARISONS(size_t, size_t, "%zu")
^
test/testutil/tests.c: In function 'test_size_t_ne':
test/testutil/tests.c:575:27: warning: unknown conversion type character 'z' in format [-Wformat=]
"[" fmt "] compared to [" fmt "]",            \
^
test/testutil/tests.c:582:5: note: in expansion of macro 'DEFINE_COMPARISON'
DEFINE_COMPARISON(type, name, ne, !=, fmt)                          \
^
test/testutil/tests.c:594:1: note: in expansion of macro 'DEFINE_COMPARISONS'
DEFINE_COMPARISONS(size_t, size_t, "%zu")
^
test/testutil/tests.c:575:27: warning: unknown conversion type character 'z' in format [-Wformat=]
"[" fmt "] compared to [" fmt "]",            \
^
test/testutil/tests.c:582:5: note: in expansion of macro 'DEFINE_COMPARISON'
DEFINE_COMPARISON(type, name, ne, !=, fmt)                          \
^
test/testutil/tests.c:594:1: note: in expansion of macro 'DEFINE_COMPARISONS'
DEFINE_COMPARISONS(size_t, size_t, "%zu")
^
test/testutil/tests.c:575:27: warning: too many arguments for format [-Wformat-extra-args]
"[" fmt "] compared to [" fmt "]",            \
^
test/testutil/tests.c:582:5: note: in expansion of macro 'DEFINE_COMPARISON'
DEFINE_COMPARISON(type, name, ne, !=, fmt)                          \
^
test/testutil/tests.c:594:1: note: in expansion of macro 'DEFINE_COMPARISONS'
DEFINE_COMPARISONS(size_t, size_t, "%zu")
^
test/testutil/tests.c: In function 'test_size_t_lt':
test/testutil/tests.c:575:27: warning: unknown conversion type character 'z' in format [-Wformat=]
"[" fmt "] compared to [" fmt "]",            \
^
test/testutil/tests.c:583:5: note: in expansion of macro 'DEFINE_COMPARISON'
DEFINE_COMPARISON(type, name, lt, <, fmt)                           \
^
test/testutil/tests.c:594:1: note: in expansion of macro 'DEFINE_COMPARISONS'
DEFINE_COMPARISONS(size_t, size_t, "%zu")
^
test/testutil/tests.c:575:27: warning: unknown conversion type character 'z' in format [-Wformat=]
"[" fmt "] compared to [" fmt "]",            \
^
test/testutil/tests.c:583:5: note: in expansion of macro 'DEFINE_COMPARISON'
DEFINE_COMPARISON(type, name, lt, <, fmt)                           \
^
test/testutil/tests.c:594:1: note: in expansion of macro 'DEFINE_COMPARISONS'
DEFINE_COMPARISONS(size_t, size_t, "%zu")
^
test/testutil/tests.c:575:27: warning: too many arguments for format [-Wformat-extra-args]
"[" fmt "] compared to [" fmt "]",            \
^
test/testutil/tests.c:583:5: note: in expansion of macro 'DEFINE_COMPARISON'
DEFINE_COMPARISON(type, name, lt, <, fmt)                           \
^
test/testutil/tests.c:594:1: note: in expansion of macro 'DEFINE_COMPARISONS'
DEFINE_COMPARISONS(size_t, size_t, "%zu")
^
test/testutil/tests.c: In function 'test_size_t_le':
test/testutil/tests.c:575:27: warning: unknown conversion type character 'z' in format [-Wformat=]
"[" fmt "] compared to [" fmt "]",            \
^
test/testutil/tests.c:584:5: note: in expansion of macro 'DEFINE_COMPARISON'
DEFINE_COMPARISON(type, name, le, <=, fmt)                          \
^
test/testutil/tests.c:594:1: note: in expansion of macro 'DEFINE_COMPARISONS'
DEFINE_COMPARISONS(size_t, size_t, "%zu")
^
test/testutil/tests.c:575:27: warning: unknown conversion type character 'z' in format [-Wformat=]
"[" fmt "] compared to [" fmt "]",            \
^
test/testutil/tests.c:584:5: note: in expansion of macro 'DEFINE_COMPARISON'
DEFINE_COMPARISON(type, name, le, <=, fmt)                          \
^
test/testutil/tests.c:594:1: note: in expansion of macro 'DEFINE_COMPARISONS'
DEFINE_COMPARISONS(size_t, size_t, "%zu")
^
test/testutil/tests.c:575:27: warning: too many arguments for format [-Wformat-extra-args]
"[" fmt "] compared to [" fmt "]",            \
^
test/testutil/tests.c:584:5: note: in expansion of macro 'DEFINE_COMPARISON'
DEFINE_COMPARISON(type, name, le, <=, fmt)                          \
^
test/testutil/tests.c:594:1: note: in expansion of macro 'DEFINE_COMPARISONS'
DEFINE_COMPARISONS(size_t, size_t, "%zu")
^
test/testutil/tests.c: In function 'test_size_t_gt':
test/testutil/tests.c:575:27: warning: unknown conversion type character 'z' in format [-Wformat=]
"[" fmt "] compared to [" fmt "]",            \
^
test/testutil/tests.c:585:5: note: in expansion of macro 'DEFINE_COMPARISON'
DEFINE_COMPARISON(type, name, gt, >, fmt)                           \
^
test/testutil/tests.c:594:1: note: in expansion of macro 'DEFINE_COMPARISONS'
DEFINE_COMPARISONS(size_t, size_t, "%zu")
^
test/testutil/tests.c:575:27: warning: unknown conversion type character 'z' in format [-Wformat=]
"[" fmt "] compared to [" fmt "]",            \
^
test/testutil/tests.c:585:5: note: in expansion of macro 'DEFINE_COMPARISON'
DEFINE_COMPARISON(type, name, gt, >, fmt)                           \
^
test/testutil/tests.c:594:1: note: in expansion of macro 'DEFINE_COMPARISONS'
DEFINE_COMPARISONS(size_t, size_t, "%zu")
^
test/testutil/tests.c:575:27: warning: too many arguments for format [-Wformat-extra-args]
"[" fmt "] compared to [" fmt "]",            \
^
test/testutil/tests.c:585:5: note: in expansion of macro 'DEFINE_COMPARISON'
DEFINE_COMPARISON(type, name, gt, >, fmt)                           \
^
test/testutil/tests.c:594:1: note: in expansion of macro 'DEFINE_COMPARISONS'
DEFINE_COMPARISONS(size_t, size_t, "%zu")
^
test/testutil/tests.c: In function 'test_size_t_ge':
test/testutil/tests.c:575:27: warning: unknown conversion type character 'z' in format [-Wformat=]
"[" fmt "] compared to [" fmt "]",            \
^
test/testutil/tests.c:586:5: note: in expansion of macro 'DEFINE_COMPARISON'
DEFINE_COMPARISON(type, name, ge, >=, fmt)
^
test/testutil/tests.c:594:1: note: in expansion of macro 'DEFINE_COMPARISONS'
DEFINE_COMPARISONS(size_t, size_t, "%zu")
^
test/testutil/tests.c:575:27: warning: unknown conversion type character 'z' in format [-Wformat=]
"[" fmt "] compared to [" fmt "]",            \
^
test/testutil/tests.c:586:5: note: in expansion of macro 'DEFINE_COMPARISON'
DEFINE_COMPARISON(type, name, ge, >=, fmt)
^
test/testutil/tests.c:594:1: note: in expansion of macro 'DEFINE_COMPARISONS'
DEFINE_COMPARISONS(size_t, size_t, "%zu")
^
test/testutil/tests.c:575:27: warning: too many arguments for format [-Wformat-extra-args]
"[" fmt "] compared to [" fmt "]",            \
^
test/testutil/tests.c:586:5: note: in expansion of macro 'DEFINE_COMPARISON'
DEFINE_COMPARISON(type, name, ge, >=, fmt)
^
test/testutil/tests.c:594:1: note: in expansion of macro 'DEFINE_COMPARISONS'
DEFINE_COMPARISONS(size_t, size_t, "%zu")
^
x86_64-w64-mingw32-ar: creating test/libtestutil.a
x86_64-w64-mingw32-ar: creating libssl.a
x86_64-w64-mingw32-ar: creating libcrypto.a
Warning 6: in the definition of state, in the last element of the sequence, in top-level declaration Crypto.Symmetric.AES.cipher, in file Crypto_Symmetric_AES: stack newbuf 0uint8 Crypto.Symmetric.AES.blocklen is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of state, in the last element of the sequence, in top-level declaration Crypto.Symmetric.AES.inv_cipher, in file Crypto_Symmetric_AES: stack newbuf 0uint8 Crypto.Symmetric.AES.blocklen is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of state, in the last element of the sequence, in top-level declaration Crypto.Symmetric.AES128.cipher, in file Crypto_Symmetric_AES128: stack newbuf 0uint8 Crypto.Symmetric.AES128.blocklen is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of state, in the last element of the sequence, in top-level declaration Crypto.Symmetric.AES128.inv_cipher, in file Crypto_Symmetric_AES128: stack newbuf 0uint8 Crypto.Symmetric.AES128.blocklen is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of buf, after the definition of m0, in the last element of the sequence, in top-level declaration Crypto.Symmetric.Bytes.random_bytes, in file Crypto_Symmetric_Bytes: stack newbuf 0uint8 @1 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of uu____701, in top-level declaration Crypto.Symmetric.MAC.rcreate, in file Crypto_Symmetric_MAC: eternal newbuf 0uint8 Crypto.Symmetric.MAC.wlen is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of k, in top-level declaration Crypto.Symmetric.UF1CMA.akey_gen, in file Crypto_Symmetric_UF1CMA: eternal newbuf 0uint8 Crypto.Symmetric.UF1CMA.skeylen @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of sk, in top-level declaration Crypto.Symmetric.UF1CMA.akey_coerce, in file Crypto_Symmetric_UF1CMA: eternal newbuf 0uint8 Crypto.Symmetric.UF1CMA.skeylen @1 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of k, after the definition of len1, in top-level declaration Crypto.Symmetric.UF1CMA.gen, in file Crypto_Symmetric_UF1CMA: eternal newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in top-level declaration Crypto.Plain.create, in file Crypto_Plain: stack newbuf @1 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of keystate, after the definition of mac_rgn, in the last element of the sequence, in top-level declaration Crypto.Symmetric.PRF.gen, in file Crypto_Symmetric_PRF: eternal newbuf 0uint8 Crypto.Symmetric.PRF.statelen @1 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of key, after the definition of keystate, in the last element of the sequence, in top-level declaration Crypto.Symmetric.PRF.gen, in file Crypto_Symmetric_PRF: stack newbuf 0uint8 Crypto.Symmetric.PRF.keylen @2 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of keystate, after the definition of mac_rgn, in top-level declaration Crypto.Symmetric.PRF.coerce, in file Crypto_Symmetric_PRF: eternal newbuf 0uint8 Crypto.Symmetric.PRF.statelen @2 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of keyBuffer, after the definition of macId, in the last element of the sequence, in top-level declaration Crypto.Symmetric.PRF.prf_mac, in file Crypto_Symmetric_PRF: eternal newbuf 0uint8 Crypto.Symmetric.UF1CMA.keylen @4 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of keyBuffer, after the definition of x, in top-level declaration Crypto.Symmetric.PRF.prf_sk0, in file Crypto_Symmetric_PRF: eternal newbuf 0uint8 Crypto.Symmetric.UF1CMA.skeylen @2 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of cipher1, after the definition of cipherlen, in the last element of the sequence, in top-level declaration Crypto.KrmlTest.test, in file Crypto_KrmlTest: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of cipher1, after the definition of cipherlen, in the last element of the sequence, in top-level declaration Crypto.KrmlTest.test_aes_gcm, in file Crypto_KrmlTest: stack newbuf 2uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of plain, after the definition of plainlen, in top-level declaration Crypto.KrmlTest.test_aes_gcm_0, in file Crypto_KrmlTest: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of aad, after the definition of aadlen, in top-level declaration Crypto.KrmlTest.test_aes_gcm_0, in file Crypto_KrmlTest: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of plain, after the definition of plainlen, in top-level declaration Crypto.KrmlTest.test_aes_gcm_1, in file Crypto_KrmlTest: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of aad, after the definition of aadlen, in top-level declaration Crypto.KrmlTest.test_aes_gcm_1, in file Crypto_KrmlTest: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of plain, after the definition of plainlen, in top-level declaration Crypto.KrmlTest.test_aes_gcm_2, in file Crypto_KrmlTest: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of aad, after the definition of aadlen, in top-level declaration Crypto.KrmlTest.test_aes_gcm_2, in file Crypto_KrmlTest: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of aad, after the definition of aadlen, in top-level declaration Crypto.KrmlTest.test_aes_gcm_3, in file Crypto_KrmlTest: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 7: : After inlining, Crypto.Symmetric.Poly1305.Spec.field_mul (going into Crypto_Symmetric_Poly1305_Spec) calls FStar.Mul.op_Star (going into FStar) -- removing the static qualifier from FStar.Mul.op_Star
Warning 7: : After inlining, Crypto.Symmetric.UF1CMA.verify (going into Crypto_Symmetric_UF1CMA) calls FStar.Monotonic.RRef.m_recall (going into FStar) -- removing the static qualifier from FStar.Monotonic.RRef.m_recall
Warning 7: : After inlining, Crypto.AEAD.Decrypt.decrypt (going into Crypto_AEAD_Decrypt) calls Crypto.AEAD.Encoding.add_bytes (going into Crypto_AEAD_Encoding) -- removing the static qualifier from Crypto.AEAD.Encoding.add_bytes
Warning 7: : After inlining, Crypto.AEAD.Decrypt.decrypt (going into Crypto_AEAD_Decrypt) calls Crypto.AEAD.Encoding.store_lengths_poly1305 (going into Crypto_AEAD_Encoding) -- removing the static qualifier from Crypto.AEAD.Encoding.store_lengths_poly1305
Warning 7: : After inlining, Crypto.AEAD.Decrypt.decrypt (going into Crypto_AEAD_Decrypt) calls Crypto.AEAD.Encoding.store_lengths_ghash (going into Crypto_AEAD_Encoding) -- removing the static qualifier from Crypto.AEAD.Encoding.store_lengths_ghash
Warning 6: in the definition of state, in the last element of the sequence, in top-level declaration Crypto.Symmetric.AES.cipher, in file Crypto_Symmetric_AES: stack newbuf 0uint8 Crypto.Symmetric.AES.blocklen is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of state, in the last element of the sequence, in top-level declaration Crypto.Symmetric.AES.inv_cipher, in file Crypto_Symmetric_AES: stack newbuf 0uint8 Crypto.Symmetric.AES.blocklen is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of state, in the last element of the sequence, in top-level declaration Crypto.Symmetric.AES128.cipher, in file Crypto_Symmetric_AES128: stack newbuf 0uint8 Crypto.Symmetric.AES128.blocklen is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of state, in the last element of the sequence, in top-level declaration Crypto.Symmetric.AES128.inv_cipher, in file Crypto_Symmetric_AES128: stack newbuf 0uint8 Crypto.Symmetric.AES128.blocklen is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of buf, after the definition of m0, in the last element of the sequence, in top-level declaration Crypto.Symmetric.Bytes.random_bytes, in file Crypto_Symmetric_Bytes: stack newbuf 0uint8 @1 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of uu____701, in top-level declaration Crypto.Symmetric.MAC.rcreate, in file Crypto_Symmetric_MAC: eternal newbuf 0uint8 Crypto.Symmetric.MAC.wlen is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of k, in top-level declaration Crypto.Symmetric.UF1CMA.akey_gen, in file Crypto_Symmetric_UF1CMA: eternal newbuf 0uint8 Crypto.Symmetric.UF1CMA.skeylen @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of sk, in top-level declaration Crypto.Symmetric.UF1CMA.akey_coerce, in file Crypto_Symmetric_UF1CMA: eternal newbuf 0uint8 Crypto.Symmetric.UF1CMA.skeylen @1 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of k, after the definition of len1, in top-level declaration Crypto.Symmetric.UF1CMA.gen, in file Crypto_Symmetric_UF1CMA: eternal newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in top-level declaration Crypto.Plain.create, in file Crypto_Plain: stack newbuf @1 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of keystate, after the definition of mac_rgn, in the last element of the sequence, in top-level declaration Crypto.Symmetric.PRF.gen, in file Crypto_Symmetric_PRF: eternal newbuf 0uint8 Crypto.Symmetric.PRF.statelen @1 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of key, after the definition of keystate, in the last element of the sequence, in top-level declaration Crypto.Symmetric.PRF.gen, in file Crypto_Symmetric_PRF: stack newbuf 0uint8 Crypto.Symmetric.PRF.keylen @2 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of keystate, after the definition of mac_rgn, in top-level declaration Crypto.Symmetric.PRF.coerce, in file Crypto_Symmetric_PRF: eternal newbuf 0uint8 Crypto.Symmetric.PRF.statelen @2 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of keyBuffer, after the definition of macId, in the last element of the sequence, in top-level declaration Crypto.Symmetric.PRF.prf_mac, in file Crypto_Symmetric_PRF: eternal newbuf 0uint8 Crypto.Symmetric.UF1CMA.keylen @4 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of keyBuffer, after the definition of x, in top-level declaration Crypto.Symmetric.PRF.prf_sk0, in file Crypto_Symmetric_PRF: eternal newbuf 0uint8 Crypto.Symmetric.UF1CMA.skeylen @2 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of cipher1, after the definition of cipherlen, in the last element of the sequence, in top-level declaration Crypto.KrmlTest.test, in file Crypto_KrmlTest: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of cipher1, after the definition of cipherlen, in the last element of the sequence, in top-level declaration Crypto.KrmlTest.test_aes_gcm, in file Crypto_KrmlTest: stack newbuf 2uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of plain, after the definition of plainlen, in top-level declaration Crypto.KrmlTest.test_aes_gcm_0, in file Crypto_KrmlTest: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of aad, after the definition of aadlen, in top-level declaration Crypto.KrmlTest.test_aes_gcm_0, in file Crypto_KrmlTest: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of plain, after the definition of plainlen, in top-level declaration Crypto.KrmlTest.test_aes_gcm_1, in file Crypto_KrmlTest: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of aad, after the definition of aadlen, in top-level declaration Crypto.KrmlTest.test_aes_gcm_1, in file Crypto_KrmlTest: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of plain, after the definition of plainlen, in top-level declaration Crypto.KrmlTest.test_aes_gcm_2, in file Crypto_KrmlTest: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of aad, after the definition of aadlen, in top-level declaration Crypto.KrmlTest.test_aes_gcm_2, in file Crypto_KrmlTest: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of aad, after the definition of aadlen, in top-level declaration Crypto.KrmlTest.test_aes_gcm_3, in file Crypto_KrmlTest: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 7: : After inlining, Crypto.Symmetric.Poly1305.Spec.field_mul (going into Crypto_Symmetric_Poly1305_Spec) calls FStar.Mul.op_Star (going into FStar) -- removing the static qualifier from FStar.Mul.op_Star
Warning 7: : After inlining, Crypto.Symmetric.UF1CMA.verify (going into Crypto_Symmetric_UF1CMA) calls FStar.Monotonic.RRef.m_recall (going into FStar) -- removing the static qualifier from FStar.Monotonic.RRef.m_recall
Warning 7: : After inlining, Crypto.AEAD.Decrypt.decrypt (going into Crypto_AEAD_Decrypt) calls Crypto.AEAD.Encoding.add_bytes (going into Crypto_AEAD_Encoding) -- removing the static qualifier from Crypto.AEAD.Encoding.add_bytes
Warning 7: : After inlining, Crypto.AEAD.Decrypt.decrypt (going into Crypto_AEAD_Decrypt) calls Crypto.AEAD.Encoding.store_lengths_poly1305 (going into Crypto_AEAD_Encoding) -- removing the static qualifier from Crypto.AEAD.Encoding.store_lengths_poly1305
Warning 7: : After inlining, Crypto.AEAD.Decrypt.decrypt (going into Crypto_AEAD_Decrypt) calls Crypto.AEAD.Encoding.store_lengths_ghash (going into Crypto_AEAD_Encoding) -- removing the static qualifier from Crypto.AEAD.Encoding.store_lengths_ghash
File "ulib/ml/extracted/FStar_IndefiniteDescription.ml", line 7, characters 31-33:
Warning 20: this argument will not be used by the function.
File "ulib/ml/extracted/FStar_Tactics.ml", line 353, characters 45-46:
Warning 20: this argument will not be used by the function.
File "ulib/ml/extracted/FStar_Util.ml", line 2, characters 40-41:
Warning 20: this argument will not be used by the function.
File "ulib/ml/extracted/FStar_Util.ml", line 2, characters 42-43:
Warning 20: this argument will not be used by the function.
File "ulib/ml/extracted/FStar_Util.ml", line 3, characters 64-65:
Warning 20: this argument will not be used by the function.
File "ulib/ml/extracted/FStar_Util.ml", line 5, characters 37-38:
Warning 20: this argument will not be used by the function.
File "ulib/ml/extracted/FStar_Util.ml", line 5, characters 62-63:
Warning 20: this argument will not be used by the function.
File "ulib/ml/extracted/FStar_IndefiniteDescription.ml", line 7, characters 31-33:
Warning 20: this argument will not be used by the function.
File "ulib/ml/extracted/FStar_Tactics.ml", line 353, characters 45-46:
Warning 20: this argument will not be used by the function.
File "ulib/ml/extracted/FStar_Util.ml", line 2, characters 40-41:
Warning 20: this argument will not be used by the function.
File "ulib/ml/extracted/FStar_Util.ml", line 2, characters 42-43:
Warning 20: this argument will not be used by the function.
File "ulib/ml/extracted/FStar_Util.ml", line 3, characters 64-65:
Warning 20: this argument will not be used by the function.
File "ulib/ml/extracted/FStar_Util.ml", line 5, characters 37-38:
Warning 20: this argument will not be used by the function.
File "ulib/ml/extracted/FStar_Util.ml", line 5, characters 62-63:
Warning 20: this argument will not be used by the function.
Extracted.mk:94: warning: overriding recipe for target 'mitls.cmxa'
Makefile:196: warning: ignoring old recipe for target 'mitls.cmxa'
Extracted.mk:97: warning: overriding recipe for target 'mitls.exe'
Makefile:199: warning: ignoring old recipe for target 'mitls.exe'
Extracted.mk:119: warning: overriding recipe for target 'test'
Makefile:208: warning: ignoring old recipe for target 'test'
Extracted.mk:175: warning: overriding recipe for target 'cmitls.o'
Makefile:202: warning: ignoring old recipe for target 'cmitls.o'
Extracted.mk:177: warning: overriding recipe for target 'cmitls.exe'
Makefile:204: warning: ignoring old recipe for target 'cmitls.exe'
Extracted.mk:94: warning: overriding recipe for target 'mitls.cmxa'
Makefile:196: warning: ignoring old recipe for target 'mitls.cmxa'
Extracted.mk:97: warning: overriding recipe for target 'mitls.exe'
Makefile:199: warning: ignoring old recipe for target 'mitls.exe'
Extracted.mk:119: warning: overriding recipe for target 'test'
Makefile:208: warning: ignoring old recipe for target 'test'
Extracted.mk:175: warning: overriding recipe for target 'cmitls.o'
Makefile:202: warning: ignoring old recipe for target 'cmitls.o'
Extracted.mk:177: warning: overriding recipe for target 'cmitls.exe'
Makefile:204: warning: ignoring old recipe for target 'cmitls.exe'
ffi.c:1:0: warning: -fPIC ignored for target (all code is position independent)
#include <stdio.h>
^
ffi.c:1:0: warning: -fPIC ignored for target (all code is position independent)
#include <stdio.h>
^
Warning 6: in the definition of buf, after the definition of m0, in the last element of the sequence, in top-level declaration Crypto.Symmetric.Bytes.random_bytes, in file Crypto_Symmetric_Bytes: stack newbuf 0uint8 @1 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of k1, in top-level declaration Crypto.Symmetric.UF1CMA.akey_gen, in file Crypto_Symmetric_UF1CMA: eternal newbuf 0uint8 Crypto.Symmetric.UF1CMA.skeylen @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of sk, in top-level declaration Crypto.Symmetric.UF1CMA.akey_coerce, in file Crypto_Symmetric_UF1CMA: eternal newbuf 0uint8 Crypto.Symmetric.UF1CMA.skeylen @1 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of k1, after the definition of len1, in top-level declaration Crypto.Symmetric.UF1CMA.gen, in file Crypto_Symmetric_UF1CMA: eternal newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in top-level declaration Crypto.Plain.create, in file Crypto_Plain: stack newbuf @1 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of keystate, after the definition of mac_rgn, in the last element of the sequence, in top-level declaration Crypto.Symmetric.PRF.gen, in file Crypto_Symmetric_PRF: eternal newbuf 0uint8 Crypto.Symmetric.PRF.statelen @1 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of key, after the definition of keystate, in the last element of the sequence, in top-level declaration Crypto.Symmetric.PRF.gen, in file Crypto_Symmetric_PRF: stack newbuf 0uint8 Crypto.Symmetric.PRF.keylen @2 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of keystate, after the definition of mac_rgn, in top-level declaration Crypto.Symmetric.PRF.coerce, in file Crypto_Symmetric_PRF: eternal newbuf 0uint8 Crypto.Symmetric.PRF.statelen @2 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of keyBuffer, after the definition of h0, in the last element of the sequence, after the definition of macId, in top-level declaration Crypto.Symmetric.PRF.prf_mac, in file Crypto_Symmetric_PRF: eternal newbuf 0uint8 Crypto.Symmetric.UF1CMA.keylen @5 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of keyBuffer, after the definition of x, in top-level declaration Crypto.Symmetric.PRF.prf_sk0, in file Crypto_Symmetric_PRF: eternal newbuf 0uint8 Crypto.Symmetric.UF1CMA.skeylen @2 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 7: : After inlining, Crypto.Symmetric.Bytes.uint128_to_uint8 (going into Crypto_Symmetric_Bytes) calls FStar.Int.Cast.Full.uint128_to_uint64 (going into FStar) -- removing the static qualifier from FStar.Int.Cast.Full.uint128_to_uint64
Warning 7: : After inlining, Crypto.Symmetric.Bytes.little_endian (going into Crypto_Symmetric_Bytes) calls FStar.Endianness.little_endian (going into FStar) -- removing the static qualifier from FStar.Endianness.little_endian
Warning 7: : After inlining, Crypto.Symmetric.Bytes.big_endian (going into Crypto_Symmetric_Bytes) calls FStar.Endianness.big_endian (going into FStar) -- removing the static qualifier from FStar.Endianness.big_endian
Warning 7: : After inlining, Crypto.Symmetric.Bytes.uint8_to_uint128 (going into Crypto_Symmetric_Bytes) calls FStar.Int.Cast.Full.uint64_to_uint128 (going into FStar) -- removing the static qualifier from FStar.Int.Cast.Full.uint64_to_uint128
Warning 7: : After inlining, Crypto.Symmetric.Bytes.load_uint128 (going into Crypto_Symmetric_Bytes) calls FStar.UInt128.add (going into FStar) -- removing the static qualifier from FStar.UInt128.add
Warning 7: : After inlining, Crypto.Symmetric.Bytes.load_uint128 (going into Crypto_Symmetric_Bytes) calls FStar.UInt128.shift_left (going into FStar) -- removing the static qualifier from FStar.UInt128.shift_left
Warning 7: : After inlining, Crypto.Symmetric.Bytes.little_bytes (going into Crypto_Symmetric_Bytes) calls FStar.Endianness.little_bytes (going into FStar) -- removing the static qualifier from FStar.Endianness.little_bytes
Warning 7: : After inlining, Crypto.Symmetric.Bytes.store_uint128 (going into Crypto_Symmetric_Bytes) calls FStar.UInt128.shift_right (going into FStar) -- removing the static qualifier from FStar.UInt128.shift_right
Warning 7: : After inlining, Hacl.Bignum.Modulo.carry_top_wide (going into Hacl) calls FStar.UInt128.logand (going into FStar) -- removing the static qualifier from FStar.UInt128.logand
Warning 7: : After inlining, Hacl.Bignum.Fproduct.sum_scalar_multiplication_ (going into Hacl) calls FStar.UInt128.add_mod (going into FStar) -- removing the static qualifier from FStar.UInt128.add_mod
Warning 7: : After inlining, Hacl.Bignum.Fproduct.sum_scalar_multiplication_ (going into Hacl) calls FStar.UInt128.mul_wide (going into FStar) -- removing the static qualifier from FStar.UInt128.mul_wide
Warning 7: : After inlining, Hacl.Impl.Poly1305_64.poly1305_encode_r (going into Hacl) calls FStar.UInt128.logor (going into FStar) -- removing the static qualifier from FStar.UInt128.logor
Warning 7: : After inlining, Crypto.Symmetric.Cipher.compute (going into Crypto_Symmetric_Cipher) calls Hacl.Impl.Chacha20.setup (going into Hacl) -- removing the static qualifier from Hacl.Impl.Chacha20.setup
Warning 8: : After inlining, Crypto.Symmetric.Cipher.compute (going into Crypto_Symmetric_Cipher) calls Hacl.Impl.Chacha20.setup (going into Hacl). This is a call across translation units but Hacl.Impl.Chacha20.setup has a C "inline" qualifier. The C standard allows removing Hacl.Impl.Chacha20.setup from its translation unit (see C11 6.7.3 §5), and CompCert will do it. 
Warning 7: : After inlining, Crypto.Symmetric.Cipher.compute (going into Crypto_Symmetric_Cipher) calls Hacl.Impl.Chacha20.copy_state (going into Hacl) -- removing the static qualifier from Hacl.Impl.Chacha20.copy_state
Warning 8: : After inlining, Crypto.Symmetric.Cipher.compute (going into Crypto_Symmetric_Cipher) calls Hacl.Impl.Chacha20.copy_state (going into Hacl). This is a call across translation units but Hacl.Impl.Chacha20.copy_state has a C "inline" qualifier. The C standard allows removing Hacl.Impl.Chacha20.copy_state from its translation unit (see C11 6.7.3 §5), and CompCert will do it. 
Warning 7: : After inlining, Crypto.Symmetric.Cipher.compute (going into Crypto_Symmetric_Cipher) calls Hacl.Impl.Chacha20.rounds (going into Hacl) -- removing the static qualifier from Hacl.Impl.Chacha20.rounds
Warning 8: : After inlining, Crypto.Symmetric.Cipher.compute (going into Crypto_Symmetric_Cipher) calls Hacl.Impl.Chacha20.rounds (going into Hacl). This is a call across translation units but Hacl.Impl.Chacha20.rounds has a C "inline" qualifier. The C standard allows removing Hacl.Impl.Chacha20.rounds from its translation unit (see C11 6.7.3 §5), and CompCert will do it. 
Warning 7: : After inlining, Crypto.Symmetric.Cipher.compute (going into Crypto_Symmetric_Cipher) calls Hacl.Impl.Chacha20.sum_states (going into Hacl) -- removing the static qualifier from Hacl.Impl.Chacha20.sum_states
Warning 8: : After inlining, Crypto.Symmetric.Cipher.compute (going into Crypto_Symmetric_Cipher) calls Hacl.Impl.Chacha20.sum_states (going into Hacl). This is a call across translation units but Hacl.Impl.Chacha20.sum_states has a C "inline" qualifier. The C standard allows removing Hacl.Impl.Chacha20.sum_states from its translation unit (see C11 6.7.3 §5), and CompCert will do it. 
Warning 7: : After inlining, Crypto.Symmetric.Cipher.compute (going into Crypto_Symmetric_Cipher) calls Hacl.Lib.LoadStore32.uint32s_to_le_bytes (going into Hacl) -- removing the static qualifier from Hacl.Lib.LoadStore32.uint32s_to_le_bytes
Warning 7: : After inlining, Crypto.Symmetric.GF128.gf128_add (going into Crypto_Symmetric_GF128) calls FStar.UInt128.logxor (going into FStar) -- removing the static qualifier from FStar.UInt128.logxor
Warning 7: : After inlining, Crypto.Symmetric.GF128.gf128_shift_reduce (going into Crypto_Symmetric_GF128) calls FStar.UInt128.eq_mask (going into FStar) -- removing the static qualifier from FStar.UInt128.eq_mask
Warning 7: : After inlining, Crypto.Symmetric.MAC.rcreate (going into Crypto_Symmetric_MAC) calls FStar.UInt128.uint64_to_uint128 (going into FStar) -- removing the static qualifier from FStar.UInt128.uint64_to_uint128
Warning 7: : After inlining, Crypto.Symmetric.MAC.update (going into Crypto_Symmetric_MAC) calls Hacl.Impl.Poly1305_64.poly1305_update (going into Hacl) -- removing the static qualifier from Hacl.Impl.Poly1305_64.poly1305_update
Warning 8: : After inlining, Crypto.Symmetric.MAC.update (going into Crypto_Symmetric_MAC) calls Hacl.Impl.Poly1305_64.poly1305_update (going into Hacl). This is a call across translation units but Hacl.Impl.Poly1305_64.poly1305_update has a C "inline" qualifier. The C standard allows removing Hacl.Impl.Poly1305_64.poly1305_update from its translation unit (see C11 6.7.3 §5), and CompCert will do it. 
Warning 7: : After inlining, Crypto.Symmetric.MAC.update (going into Crypto_Symmetric_MAC) calls Hacl.Impl.Poly1305_64.mk_state (going into Hacl) -- removing the static qualifier from Hacl.Impl.Poly1305_64.mk_state
Warning 7: : After inlining, Crypto.Symmetric.UF1CMA.verify (going into Crypto_Symmetric_UF1CMA) calls FStar.Monotonic.RRef.m_recall (going into FStar) -- removing the static qualifier from FStar.Monotonic.RRef.m_recall
Warning 7: : After inlining, Crypto.Symmetric.UF1CMA.verify (going into Crypto_Symmetric_UF1CMA) calls Hacl.Impl.Poly1305_64.poly1305_finish_ (going into Hacl) -- removing the static qualifier from Hacl.Impl.Poly1305_64.poly1305_finish_
Warning 7: : After inlining, Crypto.AEAD.Invariant.remaining_len_ok (going into Crypto_AEAD_Invariant) calls FStar.Mul.op_Star (going into FStar) -- removing the static qualifier from FStar.Mul.op_Star
Warning 7: : After inlining, Crypto.AEAD.Decrypt.decrypt (going into Crypto_AEAD_Decrypt) calls Crypto.AEAD.Encoding.add_bytes (going into Crypto_AEAD_Encoding) -- removing the static qualifier from Crypto.AEAD.Encoding.add_bytes
Warning 7: : After inlining, Crypto.AEAD.Decrypt.decrypt (going into Crypto_AEAD_Decrypt) calls Crypto.AEAD.Encoding.store_lengths (going into Crypto_AEAD_Encoding) -- removing the static qualifier from Crypto.AEAD.Encoding.store_lengths
Warning 7: : After inlining, Crypto.AEAD.Encrypt.encrypt (going into Crypto_AEAD_Encrypt) calls Crypto.Symmetric.UF1CMA.__proj__Acc__item__a (going into Crypto_Symmetric_UF1CMA) -- removing the static qualifier from Crypto.Symmetric.UF1CMA.__proj__Acc__item__a
Warning 9: : Some globals did not compile to C values and must be initialized in the before starting main(). You did not provide a main function, so users of your library MUST MAKE SURE they call kremlinit_globals(); (see kremlinit.c)
Warning 6: in the definition of buf, after the definition of m0, in the last element of the sequence, in top-level declaration Crypto.Symmetric.Bytes.random_bytes, in file Crypto_Symmetric_Bytes: stack newbuf 0uint8 @1 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of k1, in top-level declaration Crypto.Symmetric.UF1CMA.akey_gen, in file Crypto_Symmetric_UF1CMA: eternal newbuf 0uint8 Crypto.Symmetric.UF1CMA.skeylen @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of sk, in top-level declaration Crypto.Symmetric.UF1CMA.akey_coerce, in file Crypto_Symmetric_UF1CMA: eternal newbuf 0uint8 Crypto.Symmetric.UF1CMA.skeylen @1 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of k1, after the definition of len1, in top-level declaration Crypto.Symmetric.UF1CMA.gen, in file Crypto_Symmetric_UF1CMA: eternal newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in top-level declaration Crypto.Plain.create, in file Crypto_Plain: stack newbuf @1 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of keystate, after the definition of mac_rgn, in the last element of the sequence, in top-level declaration Crypto.Symmetric.PRF.gen, in file Crypto_Symmetric_PRF: eternal newbuf 0uint8 Crypto.Symmetric.PRF.statelen @1 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of key, after the definition of keystate, in the last element of the sequence, in top-level declaration Crypto.Symmetric.PRF.gen, in file Crypto_Symmetric_PRF: stack newbuf 0uint8 Crypto.Symmetric.PRF.keylen @2 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of keystate, after the definition of mac_rgn, in top-level declaration Crypto.Symmetric.PRF.coerce, in file Crypto_Symmetric_PRF: eternal newbuf 0uint8 Crypto.Symmetric.PRF.statelen @2 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of keyBuffer, after the definition of h0, in the last element of the sequence, after the definition of macId, in top-level declaration Crypto.Symmetric.PRF.prf_mac, in file Crypto_Symmetric_PRF: eternal newbuf 0uint8 Crypto.Symmetric.UF1CMA.keylen @5 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of keyBuffer, after the definition of x, in top-level declaration Crypto.Symmetric.PRF.prf_sk0, in file Crypto_Symmetric_PRF: eternal newbuf 0uint8 Crypto.Symmetric.UF1CMA.skeylen @2 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 7: : After inlining, Crypto.Symmetric.Bytes.uint128_to_uint8 (going into Crypto_Symmetric_Bytes) calls FStar.Int.Cast.Full.uint128_to_uint64 (going into FStar) -- removing the static qualifier from FStar.Int.Cast.Full.uint128_to_uint64
Warning 7: : After inlining, Crypto.Symmetric.Bytes.little_endian (going into Crypto_Symmetric_Bytes) calls FStar.Endianness.little_endian (going into FStar) -- removing the static qualifier from FStar.Endianness.little_endian
Warning 7: : After inlining, Crypto.Symmetric.Bytes.big_endian (going into Crypto_Symmetric_Bytes) calls FStar.Endianness.big_endian (going into FStar) -- removing the static qualifier from FStar.Endianness.big_endian
Warning 7: : After inlining, Crypto.Symmetric.Bytes.uint8_to_uint128 (going into Crypto_Symmetric_Bytes) calls FStar.Int.Cast.Full.uint64_to_uint128 (going into FStar) -- removing the static qualifier from FStar.Int.Cast.Full.uint64_to_uint128
Warning 7: : After inlining, Crypto.Symmetric.Bytes.load_uint128 (going into Crypto_Symmetric_Bytes) calls FStar.UInt128.add (going into FStar) -- removing the static qualifier from FStar.UInt128.add
Warning 7: : After inlining, Crypto.Symmetric.Bytes.load_uint128 (going into Crypto_Symmetric_Bytes) calls FStar.UInt128.shift_left (going into FStar) -- removing the static qualifier from FStar.UInt128.shift_left
Warning 7: : After inlining, Crypto.Symmetric.Bytes.little_bytes (going into Crypto_Symmetric_Bytes) calls FStar.Endianness.little_bytes (going into FStar) -- removing the static qualifier from FStar.Endianness.little_bytes
Warning 7: : After inlining, Crypto.Symmetric.Bytes.store_uint128 (going into Crypto_Symmetric_Bytes) calls FStar.UInt128.shift_right (going into FStar) -- removing the static qualifier from FStar.UInt128.shift_right
Warning 7: : After inlining, Hacl.Bignum.Modulo.carry_top_wide (going into Hacl) calls FStar.UInt128.logand (going into FStar) -- removing the static qualifier from FStar.UInt128.logand
Warning 7: : After inlining, Hacl.Bignum.Fproduct.sum_scalar_multiplication_ (going into Hacl) calls FStar.UInt128.add_mod (going into FStar) -- removing the static qualifier from FStar.UInt128.add_mod
Warning 7: : After inlining, Hacl.Bignum.Fproduct.sum_scalar_multiplication_ (going into Hacl) calls FStar.UInt128.mul_wide (going into FStar) -- removing the static qualifier from FStar.UInt128.mul_wide
Warning 7: : After inlining, Hacl.Impl.Poly1305_64.poly1305_encode_r (going into Hacl) calls FStar.UInt128.logor (going into FStar) -- removing the static qualifier from FStar.UInt128.logor
Warning 7: : After inlining, Crypto.Symmetric.Cipher.compute (going into Crypto_Symmetric_Cipher) calls Hacl.Impl.Chacha20.setup (going into Hacl) -- removing the static qualifier from Hacl.Impl.Chacha20.setup
Warning 8: : After inlining, Crypto.Symmetric.Cipher.compute (going into Crypto_Symmetric_Cipher) calls Hacl.Impl.Chacha20.setup (going into Hacl). This is a call across translation units but Hacl.Impl.Chacha20.setup has a C "inline" qualifier. The C standard allows removing Hacl.Impl.Chacha20.setup from its translation unit (see C11 6.7.3 §5), and CompCert will do it. 
Warning 7: : After inlining, Crypto.Symmetric.Cipher.compute (going into Crypto_Symmetric_Cipher) calls Hacl.Impl.Chacha20.copy_state (going into Hacl) -- removing the static qualifier from Hacl.Impl.Chacha20.copy_state
Warning 8: : After inlining, Crypto.Symmetric.Cipher.compute (going into Crypto_Symmetric_Cipher) calls Hacl.Impl.Chacha20.copy_state (going into Hacl). This is a call across translation units but Hacl.Impl.Chacha20.copy_state has a C "inline" qualifier. The C standard allows removing Hacl.Impl.Chacha20.copy_state from its translation unit (see C11 6.7.3 §5), and CompCert will do it. 
Warning 7: : After inlining, Crypto.Symmetric.Cipher.compute (going into Crypto_Symmetric_Cipher) calls Hacl.Impl.Chacha20.rounds (going into Hacl) -- removing the static qualifier from Hacl.Impl.Chacha20.rounds
Warning 8: : After inlining, Crypto.Symmetric.Cipher.compute (going into Crypto_Symmetric_Cipher) calls Hacl.Impl.Chacha20.rounds (going into Hacl). This is a call across translation units but Hacl.Impl.Chacha20.rounds has a C "inline" qualifier. The C standard allows removing Hacl.Impl.Chacha20.rounds from its translation unit (see C11 6.7.3 §5), and CompCert will do it. 
Warning 7: : After inlining, Crypto.Symmetric.Cipher.compute (going into Crypto_Symmetric_Cipher) calls Hacl.Impl.Chacha20.sum_states (going into Hacl) -- removing the static qualifier from Hacl.Impl.Chacha20.sum_states
Warning 8: : After inlining, Crypto.Symmetric.Cipher.compute (going into Crypto_Symmetric_Cipher) calls Hacl.Impl.Chacha20.sum_states (going into Hacl). This is a call across translation units but Hacl.Impl.Chacha20.sum_states has a C "inline" qualifier. The C standard allows removing Hacl.Impl.Chacha20.sum_states from its translation unit (see C11 6.7.3 §5), and CompCert will do it. 
Warning 7: : After inlining, Crypto.Symmetric.Cipher.compute (going into Crypto_Symmetric_Cipher) calls Hacl.Lib.LoadStore32.uint32s_to_le_bytes (going into Hacl) -- removing the static qualifier from Hacl.Lib.LoadStore32.uint32s_to_le_bytes
Warning 7: : After inlining, Crypto.Symmetric.GF128.gf128_add (going into Crypto_Symmetric_GF128) calls FStar.UInt128.logxor (going into FStar) -- removing the static qualifier from FStar.UInt128.logxor
Warning 7: : After inlining, Crypto.Symmetric.GF128.gf128_shift_reduce (going into Crypto_Symmetric_GF128) calls FStar.UInt128.eq_mask (going into FStar) -- removing the static qualifier from FStar.UInt128.eq_mask
Warning 7: : After inlining, Crypto.Symmetric.MAC.rcreate (going into Crypto_Symmetric_MAC) calls FStar.UInt128.uint64_to_uint128 (going into FStar) -- removing the static qualifier from FStar.UInt128.uint64_to_uint128
Warning 7: : After inlining, Crypto.Symmetric.MAC.update (going into Crypto_Symmetric_MAC) calls Hacl.Impl.Poly1305_64.poly1305_update (going into Hacl) -- removing the static qualifier from Hacl.Impl.Poly1305_64.poly1305_update
Warning 8: : After inlining, Crypto.Symmetric.MAC.update (going into Crypto_Symmetric_MAC) calls Hacl.Impl.Poly1305_64.poly1305_update (going into Hacl). This is a call across translation units but Hacl.Impl.Poly1305_64.poly1305_update has a C "inline" qualifier. The C standard allows removing Hacl.Impl.Poly1305_64.poly1305_update from its translation unit (see C11 6.7.3 §5), and CompCert will do it. 
Warning 7: : After inlining, Crypto.Symmetric.MAC.update (going into Crypto_Symmetric_MAC) calls Hacl.Impl.Poly1305_64.mk_state (going into Hacl) -- removing the static qualifier from Hacl.Impl.Poly1305_64.mk_state
Warning 7: : After inlining, Crypto.Symmetric.UF1CMA.verify (going into Crypto_Symmetric_UF1CMA) calls FStar.Monotonic.RRef.m_recall (going into FStar) -- removing the static qualifier from FStar.Monotonic.RRef.m_recall
Warning 7: : After inlining, Crypto.Symmetric.UF1CMA.verify (going into Crypto_Symmetric_UF1CMA) calls Hacl.Impl.Poly1305_64.poly1305_finish_ (going into Hacl) -- removing the static qualifier from Hacl.Impl.Poly1305_64.poly1305_finish_
Warning 7: : After inlining, Crypto.AEAD.Invariant.remaining_len_ok (going into Crypto_AEAD_Invariant) calls FStar.Mul.op_Star (going into FStar) -- removing the static qualifier from FStar.Mul.op_Star
Warning 7: : After inlining, Crypto.AEAD.Decrypt.decrypt (going into Crypto_AEAD_Decrypt) calls Crypto.AEAD.Encoding.add_bytes (going into Crypto_AEAD_Encoding) -- removing the static qualifier from Crypto.AEAD.Encoding.add_bytes
Warning 7: : After inlining, Crypto.AEAD.Decrypt.decrypt (going into Crypto_AEAD_Decrypt) calls Crypto.AEAD.Encoding.store_lengths (going into Crypto_AEAD_Encoding) -- removing the static qualifier from Crypto.AEAD.Encoding.store_lengths
Warning 7: : After inlining, Crypto.AEAD.Encrypt.encrypt (going into Crypto_AEAD_Encrypt) calls Crypto.Symmetric.UF1CMA.__proj__Acc__item__a (going into Crypto_Symmetric_UF1CMA) -- removing the static qualifier from Crypto.Symmetric.UF1CMA.__proj__Acc__item__a
Warning 9: : Some globals did not compile to C values and must be initialized in the before starting main(). You did not provide a main function, so users of your library MUST MAKE SURE they call kremlinit_globals(); (see kremlinit.c)
x86_64-w64-mingw32-ranlib: 'LowCProvider.a': No such file
File "_none_", line 1:
Error: Error while creating the library LowCProvider.a
make[3]: *** [Makefile:79: LowCProvider.cmxa] Error 2
make[3]: Target 'all' not remade because of errors.
make[2]: *** [Extracted.mk:56: ../../../hacl-star/secure_api/LowCProvider/LowCProvider.cmxa] Error 2
make[2]: Target 'mitls.cmxa' not remade because of errors.
make[1]: *** [Makefile:196: mitls.cmxa] Error 2
make[1]: Target 'mitls.exe' not remade because of errors.
make: *** [Makefile:26: build] Error 2
% Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100  1510    0     0  100  1510      0   5651 --:--:-- --:--:-- --:--:--  7512100  1512  100     2  100  1510      6   4993 --:--:-- --:--:-- --:--:--  6398
