Warning: you are using the standard library and/or the %inline keyword. We
recommend switching on --infer in order to avoid obscure type error messages.
6 shift/reduce conflicts.
File "src/basic/ml/FStar_Util.ml", line 47, characters 57-65:
Warning 40: st_mtime was selected from type BatUnix.stats.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "src/basic/ml/FStar_Util.ml", line 645, characters 2-13:
Warning 10: this expression should have type unit.
File "src/basic/ml/FStar_Util.ml", line 47, characters 57-65:
Warning 40: st_mtime was selected from type BatUnix.stats.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "src/basic/ml/FStar_Util.ml", line 645, characters 2-13:
Warning 10: this expression should have type unit.
make[3]: warning: jobserver unavailable: using -j1.  Add '+' to parent make rule.
[Checker.lookup_type] internal error Prims.list not found
Warning 4: <toplevel>: Malformed input:
Warnings.Fatal("Unrecoverable error")
Raised at file "src/Warnings.ml", line 47, characters 10-39
Called from file "src/Checker.ml", line 556, characters 37-58
Called from file "src/Checker.ml", line 388, characters 10-22
Called from file "list.ml", line 55, characters 20-23
Called from file "src/Checker.ml", line 439, characters 16-39
Called from file "src/Checker.ml", line 388, characters 10-22
Called from file "src/Checker.ml", line 220, characters 8-21
Called from file "src/Checker.ml", line 195, characters 2-16
Called from file "src/Checker.ml", line 153, characters 6-22
Dropping Spec.Poly1305.clamp_mask (at checking time)

[Checker.lookup_type] internal error Prims.list not found
Warning 4: <toplevel>: Malformed input:
Warnings.Fatal("Unrecoverable error")
Raised at file "src/Warnings.ml", line 47, characters 10-39
Called from file "src/Checker.ml", line 301, characters 37-58
Called from file "src/Checker.ml", line 195, characters 2-16
Called from file "src/Checker.ml", line 153, characters 6-22
Dropping Spec.Poly1305.mask_list (at checking time)

[Checker.lookup_type] internal error Prims.list not found
Warning 4: <toplevel>: Malformed input:
Warnings.Fatal("Unrecoverable error")
Raised at file "src/Warnings.ml", line 47, characters 10-39
Called from file "src/Checker.ml", line 301, characters 37-58
Called from file "src/Checker.ml", line 195, characters 2-16
Called from file "list.ml", line 110, characters 24-31
Called from file "src/Checker.ml", line 450, characters 8-40
Called from file "src/Checker.ml", line 388, characters 10-22
Called from file "src/Checker.ml", line 220, characters 8-21
Called from file "src/Checker.ml", line 195, characters 2-16
Called from file "src/Checker.ml", line 153, characters 6-22
Dropping Spec.Poly1305.r_mask (at checking time)

Warning 6: in the definition of mac, after the definition of macsize, in top-level declaration Hacl.Test.Poly1305_64.main, in file Hacl_Test_Poly1305_64: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 7: : After inlining, Hacl.Test.Poly1305_64.main calls Hacl.Impl.Poly1305_64.crypto_onetimeauth -- removing the static qualifier from Hacl.Impl.Poly1305_64.crypto_onetimeauth
Warning 6: in the definition of result, after the definition of keysize, in top-level declaration Hacl.Test.X25519.main, in file Hacl_Test_X25519: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 7: : After inlining, Hacl.Test.X25519.main calls Hacl.EC.crypto_scalarmult -- removing the static qualifier from Hacl.EC.crypto_scalarmult
Warning 3: run_or_warn: the following command failed:
x86_64-w64-mingw32-gcc -Wno-unused-but-set-variable -std=c11 -D__USE_MINGW_ANSI_STDIO -Wall -Werror -Wno-parentheses -Wno-unused-variable -g -O3 -fwrapv -D_BSD_SOURCE -D_DEFAULT_SOURCE -I FSTAR_LIB/hyperstack -I ../bignum -I ../lib/kremlin -I ../../specs -I C:/Build/Agent2/_work/13/s/dependencies/kremlin/kremlib -I poly-c -std=gnu99 -march=native -c poly-c/Spec_Poly1305.c -o poly-c/Spec_Poly1305.o
Warning 6: in the definition of ciphertext, after the definition of noncesize, in top-level declaration Hacl.Test.XSalsa20.main, in file Hacl_Test_XSalsa20: stack newbuf 0uint8 @2 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 8: : After inlining, Hacl.Symmetric.XSalsa20.crypto_stream_xsalsa20 calls Hacl.Symmetric.Salsa20.crypto_stream_salsa20. This is a call across translation units but Hacl.Symmetric.Salsa20.crypto_stream_salsa20 has a C "inline" qualifier. The C standard allows removing Hacl.Symmetric.Salsa20.crypto_stream_salsa20 from its translation unit (see C11 6.7.3 §5), and CompCert will do it. 
Warning 8: : After inlining, Hacl.Symmetric.XSalsa20.crypto_stream_xsalsa20_xor_ic calls Hacl.Symmetric.Salsa20.crypto_stream_salsa20_xor_ic. This is a call across translation units but Hacl.Symmetric.Salsa20.crypto_stream_salsa20_xor_ic has a C "inline" qualifier. The C standard allows removing Hacl.Symmetric.Salsa20.crypto_stream_salsa20_xor_ic from its translation unit (see C11 6.7.3 §5), and CompCert will do it. 
Warning 6: in the definition of ciphertext, after the definition of len, in top-level declaration Hacl.Test.Chacha20.main, in file Hacl_Test_Chacha20: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 7: : After inlining, Hacl.Test.Chacha20.loop calls Hacl.Symmetric.Chacha20.chacha20_update -- removing the static qualifier from Hacl.Symmetric.Chacha20.chacha20_update
Warning 8: : After inlining, Hacl.Test.Chacha20.loop calls Hacl.Symmetric.Chacha20.chacha20_update. This is a call across translation units but Hacl.Symmetric.Chacha20.chacha20_update has a C "inline" qualifier. The C standard allows removing Hacl.Symmetric.Chacha20.chacha20_update from its translation unit (see C11 6.7.3 §5), and CompCert will do it. 
Warning 7: : After inlining, Hacl.Test.Chacha20.main calls Hacl.Symmetric.Chacha20.chacha_keysetup -- removing the static qualifier from Hacl.Symmetric.Chacha20.chacha_keysetup
Warning 8: : After inlining, Hacl.Test.Chacha20.main calls Hacl.Symmetric.Chacha20.chacha_keysetup. This is a call across translation units but Hacl.Symmetric.Chacha20.chacha_keysetup has a C "inline" qualifier. The C standard allows removing Hacl.Symmetric.Chacha20.chacha_keysetup from its translation unit (see C11 6.7.3 §5), and CompCert will do it. 
Warning 7: : After inlining, Hacl.Test.Chacha20.main calls Hacl.Symmetric.Chacha20.chacha_ietf_ivsetup -- removing the static qualifier from Hacl.Symmetric.Chacha20.chacha_ietf_ivsetup
Warning 8: : After inlining, Hacl.Test.Chacha20.main calls Hacl.Symmetric.Chacha20.chacha_ietf_ivsetup. This is a call across translation units but Hacl.Symmetric.Chacha20.chacha_ietf_ivsetup has a C "inline" qualifier. The C standard allows removing Hacl.Symmetric.Chacha20.chacha_ietf_ivsetup from its translation unit (see C11 6.7.3 §5), and CompCert will do it. 
Warning 7: : After inlining, Hacl.Test.Chacha20.main calls Hacl.Symmetric.Chacha20.chacha_encrypt_bytes -- removing the static qualifier from Hacl.Symmetric.Chacha20.chacha_encrypt_bytes
Warning 7: : After inlining, Hacl.Test.Chacha20.main calls Hacl.Symmetric.Chacha20.chacha20_finish -- removing the static qualifier from Hacl.Symmetric.Chacha20.chacha20_finish
Warning 8: : After inlining, Hacl.Test.Chacha20.main calls Hacl.Symmetric.Chacha20.chacha20_finish. This is a call across translation units but Hacl.Symmetric.Chacha20.chacha20_finish has a C "inline" qualifier. The C standard allows removing Hacl.Symmetric.Chacha20.chacha20_finish from its translation unit (see C11 6.7.3 §5), and CompCert will do it. 
Warning 6: in the definition of ciphertext, after the definition of noncesize, in top-level declaration Hacl.Test.Salsa20.main, in file Hacl_Test_Salsa20: stack newbuf 0uint8 @2 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of plaintext, after the definition of ciphertext, in top-level declaration Hacl.Test.Salsa20.main, in file Hacl_Test_Salsa20: stack newbuf 0uint8 @3 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of key, after the definition of expected4, in top-level declaration Hacl.Test.Salsa20.main, in file Hacl_Test_Salsa20: stack newbuf 0uint8 @7 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of nonce, after the definition of key, in top-level declaration Hacl.Test.Salsa20.main, in file Hacl_Test_Salsa20: stack newbuf 0uint8 @7 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 7: : After inlining, Hacl.Test.Salsa20.main calls Hacl.Symmetric.Salsa20.crypto_stream_salsa20_xor -- removing the static qualifier from Hacl.Symmetric.Salsa20.crypto_stream_salsa20_xor
Warning 6: in the definition of buf, after the definition of m0, in top-level declaration Crypto.Symmetric.Bytes.random_bytes, in file Crypto_Symmetric_Bytes: stack newbuf 0uint8 @1 is a non-constant size, stack-allocated array; this is not supported by CompCert
[Checker.lookup_type] internal error Prims.list not found
Warning 4: <toplevel>: Malformed input:
Warnings.Fatal("Unrecoverable error")
Raised at file "src/Warnings.ml", line 47, characters 10-39
Called from file "src/Checker.ml", line 556, characters 37-58
Called from file "src/Checker.ml", line 388, characters 10-22
Called from file "list.ml", line 55, characters 20-23
Called from file "src/Checker.ml", line 439, characters 16-39
Called from file "src/Checker.ml", line 388, characters 10-22
Called from file "src/Checker.ml", line 220, characters 8-21
Called from file "src/Checker.ml", line 195, characters 2-16
Called from file "src/Checker.ml", line 153, characters 6-22
Dropping Spec.Poly1305.clamp_mask (at checking time)

[Checker.lookup_type] internal error Prims.list not found
Warning 4: <toplevel>: Malformed input:
Warnings.Fatal("Unrecoverable error")
Raised at file "src/Warnings.ml", line 47, characters 10-39
Called from file "src/Checker.ml", line 301, characters 37-58
Called from file "src/Checker.ml", line 195, characters 2-16
Called from file "src/Checker.ml", line 153, characters 6-22
Dropping Spec.Poly1305.mask_list (at checking time)

[Checker.lookup_type] internal error Prims.list not found
Warning 4: <toplevel>: Malformed input:
Warnings.Fatal("Unrecoverable error")
Raised at file "src/Warnings.ml", line 47, characters 10-39
Called from file "src/Checker.ml", line 301, characters 37-58
Called from file "src/Checker.ml", line 195, characters 2-16
Called from file "list.ml", line 110, characters 24-31
Called from file "src/Checker.ml", line 450, characters 8-40
Called from file "src/Checker.ml", line 388, characters 10-22
Called from file "src/Checker.ml", line 220, characters 8-21
Called from file "src/Checker.ml", line 195, characters 2-16
Called from file "src/Checker.ml", line 153, characters 6-22
Dropping Spec.Poly1305.r_mask (at checking time)

Warning 6: in the definition of k, in top-level declaration Crypto.Symmetric.UF1CMA.akey_gen, in file Crypto_Symmetric_UF1CMA: eternal newbuf 0uint8 Crypto.Symmetric.UF1CMA.skeylen @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of sk, in top-level declaration Crypto.Symmetric.UF1CMA.akey_coerce, in file Crypto_Symmetric_UF1CMA: eternal newbuf 0uint8 Crypto.Symmetric.UF1CMA.skeylen @1 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of k, after the definition of len, in top-level declaration Crypto.Symmetric.UF1CMA.gen, in file Crypto_Symmetric_UF1CMA: eternal newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in top-level declaration Crypto.Plain.create, in file Crypto_Plain: stack newbuf @1 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of keystate, after the definition of mac_rgn, in top-level declaration Crypto.Symmetric.PRF.gen, in file Crypto_Symmetric_PRF: eternal newbuf 0uint8 Crypto.Symmetric.PRF.statelen @1 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of key, after the definition of keystate, in top-level declaration Crypto.Symmetric.PRF.gen, in file Crypto_Symmetric_PRF: stack newbuf 0uint8 Crypto.Symmetric.PRF.keylen @2 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of keystate, after the definition of mac_rgn, in top-level declaration Crypto.Symmetric.PRF.coerce, in file Crypto_Symmetric_PRF: eternal newbuf 0uint8 Crypto.Symmetric.PRF.statelen @2 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of keyBuffer, after the definition of macId, in top-level declaration Crypto.Symmetric.PRF.prf_mac, in file Crypto_Symmetric_PRF: eternal newbuf 0uint8 Crypto.Symmetric.UF1CMA.keylen @5 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of keyBuffer, after the definition of x, in top-level declaration Crypto.Symmetric.PRF.prf_sk0, in file Crypto_Symmetric_PRF: eternal newbuf 0uint8 Crypto.Symmetric.UF1CMA.skeylen @3 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of cipher, after the definition of cipherlen, in top-level declaration Crypto.KrmlTest.test, in file Crypto_KrmlTest: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of cipher, after the definition of cipherlen, in top-level declaration Crypto.KrmlTest.test_aes_gcm, in file Crypto_KrmlTest: stack newbuf 2uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of plain, after the definition of plainlen, in top-level declaration Crypto.KrmlTest.test_aes_gcm_0, in file Crypto_KrmlTest: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of aad, after the definition of aadlen, in top-level declaration Crypto.KrmlTest.test_aes_gcm_0, in file Crypto_KrmlTest: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of plain, after the definition of plainlen, in top-level declaration Crypto.KrmlTest.test_aes_gcm_1, in file Crypto_KrmlTest: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of aad, after the definition of aadlen, in top-level declaration Crypto.KrmlTest.test_aes_gcm_1, in file Crypto_KrmlTest: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of plain, after the definition of plainlen, in top-level declaration Crypto.KrmlTest.test_aes_gcm_2, in file Crypto_KrmlTest: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of aad, after the definition of aadlen, in top-level declaration Crypto.KrmlTest.test_aes_gcm_2, in file Crypto_KrmlTest: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of aad, after the definition of aadlen, in top-level declaration Crypto.KrmlTest.test_aes_gcm_3, in file Crypto_KrmlTest: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 7: : After inlining, Crypto.Symmetric.Bytes.little_endian calls FStar.Endianness.little_endian -- removing the static qualifier from FStar.Endianness.little_endian
Warning 7: : After inlining, Crypto.Symmetric.Bytes.big_endian calls FStar.Endianness.big_endian -- removing the static qualifier from FStar.Endianness.big_endian
Warning 7: : After inlining, Crypto.Symmetric.Bytes.little_bytes calls FStar.Endianness.little_bytes -- removing the static qualifier from FStar.Endianness.little_bytes
Warning 8: : After inlining, Crypto.Symmetric.Cipher.compute calls Hacl.Symmetric.Chacha20.chacha_keysetup. This is a call across translation units but Hacl.Symmetric.Chacha20.chacha_keysetup has a C "inline" qualifier. The C standard allows removing Hacl.Symmetric.Chacha20.chacha_keysetup from its translation unit (see C11 6.7.3 §5), and CompCert will do it. 
Warning 8: : After inlining, Crypto.Symmetric.Cipher.compute calls Hacl.Symmetric.Chacha20.chacha_ietf_ivsetup. This is a call across translation units but Hacl.Symmetric.Chacha20.chacha_ietf_ivsetup has a C "inline" qualifier. The C standard allows removing Hacl.Symmetric.Chacha20.chacha_ietf_ivsetup from its translation unit (see C11 6.7.3 §5), and CompCert will do it. 
Warning 8: : After inlining, Crypto.Symmetric.Cipher.compute calls Hacl.Symmetric.Chacha20.chacha_encrypt_bytes_stream. This is a call across translation units but Hacl.Symmetric.Chacha20.chacha_encrypt_bytes_stream has a C "inline" qualifier. The C standard allows removing Hacl.Symmetric.Chacha20.chacha_encrypt_bytes_stream from its translation unit (see C11 6.7.3 §5), and CompCert will do it. 
Warning 7: : After inlining, Hacl.Impl.Poly1305_64.poly1305_update calls Hacl.Bignum.AddAndMultiply.add_and_multiply -- removing the static qualifier from Hacl.Bignum.AddAndMultiply.add_and_multiply
Warning 8: : After inlining, Hacl.Impl.Poly1305_64.poly1305_update calls Hacl.Bignum.AddAndMultiply.add_and_multiply. This is a call across translation units but Hacl.Bignum.AddAndMultiply.add_and_multiply has a C "inline" qualifier. The C standard allows removing Hacl.Bignum.AddAndMultiply.add_and_multiply from its translation unit (see C11 6.7.3 §5), and CompCert will do it. 
Warning 7: : After inlining, Hacl.Impl.Poly1305_64.carry_last_unrolled calls Hacl.Bignum.Modulo.carry_top -- removing the static qualifier from Hacl.Bignum.Modulo.carry_top
Warning 8: : After inlining, Hacl.Impl.Poly1305_64.carry_last_unrolled calls Hacl.Bignum.Modulo.carry_top. This is a call across translation units but Hacl.Bignum.Modulo.carry_top has a C "inline" qualifier. The C standard allows removing Hacl.Bignum.Modulo.carry_top from its translation unit (see C11 6.7.3 §5), and CompCert will do it. 
Warning 7: : After inlining, Hacl.Impl.Poly1305_64.carry_last_unrolled calls Hacl.Bignum.Fproduct.carry_0_to_1 -- removing the static qualifier from Hacl.Bignum.Fproduct.carry_0_to_1
Warning 8: : After inlining, Hacl.Impl.Poly1305_64.carry_last_unrolled calls Hacl.Bignum.Fproduct.carry_0_to_1. This is a call across translation units but Hacl.Bignum.Fproduct.carry_0_to_1 has a C "inline" qualifier. The C standard allows removing Hacl.Bignum.Fproduct.carry_0_to_1 from its translation unit (see C11 6.7.3 §5), and CompCert will do it. 
Warning 7: : After inlining, Hacl.Impl.Poly1305_64.poly1305_last_pass calls Hacl.Bignum.Fproduct.carry_limb_ -- removing the static qualifier from Hacl.Bignum.Fproduct.carry_limb_
Warning 8: : After inlining, Hacl.Impl.Poly1305_64.poly1305_last_pass calls Hacl.Bignum.Fproduct.carry_limb_. This is a call across translation units but Hacl.Bignum.Fproduct.carry_limb_ has a C "inline" qualifier. The C standard allows removing Hacl.Bignum.Fproduct.carry_limb_ from its translation unit (see C11 6.7.3 §5), and CompCert will do it. 
Warning 7: : After inlining, Crypto.Symmetric.MAC.encode_r calls Hacl.Impl.Poly1305_64.poly1305_encode_r -- removing the static qualifier from Hacl.Impl.Poly1305_64.poly1305_encode_r
Warning 8: : After inlining, Crypto.Symmetric.MAC.encode_r calls Hacl.Impl.Poly1305_64.poly1305_encode_r. This is a call across translation units but Hacl.Impl.Poly1305_64.poly1305_encode_r has a C "inline" qualifier. The C standard allows removing Hacl.Impl.Poly1305_64.poly1305_encode_r from its translation unit (see C11 6.7.3 §5), and CompCert will do it. 
Warning 7: : After inlining, Crypto.Symmetric.MAC.update calls Hacl.Impl.Poly1305_64.poly1305_update -- removing the static qualifier from Hacl.Impl.Poly1305_64.poly1305_update
Warning 7: : After inlining, Crypto.Symmetric.MAC.finish calls Hacl.Impl.Poly1305_64.poly1305_finish_ -- removing the static qualifier from Hacl.Impl.Poly1305_64.poly1305_finish_
Warning 7: : After inlining, Crypto.AEAD.Invariant.remaining_len_ok calls FStar.Mul.op_Star -- removing the static qualifier from FStar.Mul.op_Star
Warning 7: : After inlining, Crypto.AEAD.Decrypt.decrypt calls Crypto.AEAD.Encoding.add_bytes -- removing the static qualifier from Crypto.AEAD.Encoding.add_bytes
Warning 7: : After inlining, Crypto.AEAD.Decrypt.decrypt calls Crypto.AEAD.Encoding.store_lengths_poly1305 -- removing the static qualifier from Crypto.AEAD.Encoding.store_lengths_poly1305
Warning 7: : After inlining, Crypto.AEAD.Decrypt.decrypt calls Crypto.AEAD.Encoding.store_lengths_ghash -- removing the static qualifier from Crypto.AEAD.Encoding.store_lengths_ghash
Warning 7: : After inlining, Crypto.AEAD.Decrypt.decrypt calls Hacl.Impl.Poly1305_64.poly1305_start -- removing the static qualifier from Hacl.Impl.Poly1305_64.poly1305_start
Warning 7: : After inlining, Crypto.AEAD.Decrypt.decrypt calls Crypto.Symmetric.PRF.getBlock -- removing the static qualifier from Crypto.Symmetric.PRF.getBlock
Warning 6: in the definition of buf, after the definition of m0, in top-level declaration Crypto.Symmetric.Bytes.random_bytes, in file Crypto_Symmetric_Bytes: stack newbuf 0uint8 @1 is a non-constant size, stack-allocated array; this is not supported by CompCert
[Checker.lookup_type] internal error Prims.list not found
Warning 4: <toplevel>: Malformed input:
Warnings.Fatal("Unrecoverable error")
Raised at file "src/Warnings.ml", line 47, characters 10-39
Called from file "src/Checker.ml", line 556, characters 37-58
Called from file "src/Checker.ml", line 388, characters 10-22
Called from file "list.ml", line 55, characters 20-23
Called from file "src/Checker.ml", line 439, characters 16-39
Called from file "src/Checker.ml", line 388, characters 10-22
Called from file "src/Checker.ml", line 220, characters 8-21
Called from file "src/Checker.ml", line 195, characters 2-16
Called from file "src/Checker.ml", line 153, characters 6-22
Dropping Spec.Poly1305.clamp_mask (at checking time)

[Checker.lookup_type] internal error Prims.list not found
Warning 4: <toplevel>: Malformed input:
Warnings.Fatal("Unrecoverable error")
Raised at file "src/Warnings.ml", line 47, characters 10-39
Called from file "src/Checker.ml", line 301, characters 37-58
Called from file "src/Checker.ml", line 195, characters 2-16
Called from file "src/Checker.ml", line 153, characters 6-22
Dropping Spec.Poly1305.mask_list (at checking time)

[Checker.lookup_type] internal error Prims.list not found
Warning 4: <toplevel>: Malformed input:
Warnings.Fatal("Unrecoverable error")
Raised at file "src/Warnings.ml", line 47, characters 10-39
Called from file "src/Checker.ml", line 301, characters 37-58
Called from file "src/Checker.ml", line 195, characters 2-16
Called from file "list.ml", line 110, characters 24-31
Called from file "src/Checker.ml", line 450, characters 8-40
Called from file "src/Checker.ml", line 388, characters 10-22
Called from file "src/Checker.ml", line 220, characters 8-21
Called from file "src/Checker.ml", line 195, characters 2-16
Called from file "src/Checker.ml", line 153, characters 6-22
Dropping Spec.Poly1305.r_mask (at checking time)

Warning 6: in the definition of k, in top-level declaration Crypto.Symmetric.UF1CMA.akey_gen, in file Crypto_Symmetric_UF1CMA: eternal newbuf 0uint8 Crypto.Symmetric.UF1CMA.skeylen @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of sk, in top-level declaration Crypto.Symmetric.UF1CMA.akey_coerce, in file Crypto_Symmetric_UF1CMA: eternal newbuf 0uint8 Crypto.Symmetric.UF1CMA.skeylen @1 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of k, after the definition of len, in top-level declaration Crypto.Symmetric.UF1CMA.gen, in file Crypto_Symmetric_UF1CMA: eternal newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in top-level declaration Crypto.Plain.create, in file Crypto_Plain: stack newbuf @1 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of keystate, after the definition of mac_rgn, in top-level declaration Crypto.Symmetric.PRF.gen, in file Crypto_Symmetric_PRF: eternal newbuf 0uint8 Crypto.Symmetric.PRF.statelen @1 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of key, after the definition of keystate, in top-level declaration Crypto.Symmetric.PRF.gen, in file Crypto_Symmetric_PRF: stack newbuf 0uint8 Crypto.Symmetric.PRF.keylen @2 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of keystate, after the definition of mac_rgn, in top-level declaration Crypto.Symmetric.PRF.coerce, in file Crypto_Symmetric_PRF: eternal newbuf 0uint8 Crypto.Symmetric.PRF.statelen @2 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of keyBuffer, after the definition of macId, in top-level declaration Crypto.Symmetric.PRF.prf_mac, in file Crypto_Symmetric_PRF: eternal newbuf 0uint8 Crypto.Symmetric.UF1CMA.keylen @5 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of keyBuffer, after the definition of x, in top-level declaration Crypto.Symmetric.PRF.prf_sk0, in file Crypto_Symmetric_PRF: eternal newbuf 0uint8 Crypto.Symmetric.UF1CMA.skeylen @3 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of cipher, after the definition of cipherlen, in top-level declaration Crypto.KrmlTest.test, in file Crypto_KrmlTest: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of cipher, after the definition of cipherlen, in top-level declaration Crypto.KrmlTest.test_aes_gcm, in file Crypto_KrmlTest: stack newbuf 2uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of plain, after the definition of plainlen, in top-level declaration Crypto.KrmlTest.test_aes_gcm_0, in file Crypto_KrmlTest: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of aad, after the definition of aadlen, in top-level declaration Crypto.KrmlTest.test_aes_gcm_0, in file Crypto_KrmlTest: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of plain, after the definition of plainlen, in top-level declaration Crypto.KrmlTest.test_aes_gcm_1, in file Crypto_KrmlTest: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of aad, after the definition of aadlen, in top-level declaration Crypto.KrmlTest.test_aes_gcm_1, in file Crypto_KrmlTest: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of plain, after the definition of plainlen, in top-level declaration Crypto.KrmlTest.test_aes_gcm_2, in file Crypto_KrmlTest: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of aad, after the definition of aadlen, in top-level declaration Crypto.KrmlTest.test_aes_gcm_2, in file Crypto_KrmlTest: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 6: in the definition of aad, after the definition of aadlen, in top-level declaration Crypto.KrmlTest.test_aes_gcm_3, in file Crypto_KrmlTest: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert
Warning 7: : After inlining, Crypto.Symmetric.Bytes.little_endian calls FStar.Endianness.little_endian -- removing the static qualifier from FStar.Endianness.little_endian
Warning 7: : After inlining, Crypto.Symmetric.Bytes.big_endian calls FStar.Endianness.big_endian -- removing the static qualifier from FStar.Endianness.big_endian
Warning 7: : After inlining, Crypto.Symmetric.Bytes.little_bytes calls FStar.Endianness.little_bytes -- removing the static qualifier from FStar.Endianness.little_bytes
Warning 8: : After inlining, Crypto.Symmetric.Cipher.compute calls Hacl.Symmetric.Chacha20.chacha_keysetup. This is a call across translation units but Hacl.Symmetric.Chacha20.chacha_keysetup has a C "inline" qualifier. The C standard allows removing Hacl.Symmetric.Chacha20.chacha_keysetup from its translation unit (see C11 6.7.3 §5), and CompCert will do it. 
Warning 8: : After inlining, Crypto.Symmetric.Cipher.compute calls Hacl.Symmetric.Chacha20.chacha_ietf_ivsetup. This is a call across translation units but Hacl.Symmetric.Chacha20.chacha_ietf_ivsetup has a C "inline" qualifier. The C standard allows removing Hacl.Symmetric.Chacha20.chacha_ietf_ivsetup from its translation unit (see C11 6.7.3 §5), and CompCert will do it. 
Warning 8: : After inlining, Crypto.Symmetric.Cipher.compute calls Hacl.Symmetric.Chacha20.chacha_encrypt_bytes_stream. This is a call across translation units but Hacl.Symmetric.Chacha20.chacha_encrypt_bytes_stream has a C "inline" qualifier. The C standard allows removing Hacl.Symmetric.Chacha20.chacha_encrypt_bytes_stream from its translation unit (see C11 6.7.3 §5), and CompCert will do it. 
Warning 7: : After inlining, Hacl.Impl.Poly1305_64.poly1305_update calls Hacl.Bignum.AddAndMultiply.add_and_multiply -- removing the static qualifier from Hacl.Bignum.AddAndMultiply.add_and_multiply
Warning 8: : After inlining, Hacl.Impl.Poly1305_64.poly1305_update calls Hacl.Bignum.AddAndMultiply.add_and_multiply. This is a call across translation units but Hacl.Bignum.AddAndMultiply.add_and_multiply has a C "inline" qualifier. The C standard allows removing Hacl.Bignum.AddAndMultiply.add_and_multiply from its translation unit (see C11 6.7.3 §5), and CompCert will do it. 
Warning 7: : After inlining, Hacl.Impl.Poly1305_64.carry_last_unrolled calls Hacl.Bignum.Modulo.carry_top -- removing the static qualifier from Hacl.Bignum.Modulo.carry_top
Warning 8: : After inlining, Hacl.Impl.Poly1305_64.carry_last_unrolled calls Hacl.Bignum.Modulo.carry_top. This is a call across translation units but Hacl.Bignum.Modulo.carry_top has a C "inline" qualifier. The C standard allows removing Hacl.Bignum.Modulo.carry_top from its translation unit (see C11 6.7.3 §5), and CompCert will do it. 
Warning 7: : After inlining, Hacl.Impl.Poly1305_64.carry_last_unrolled calls Hacl.Bignum.Fproduct.carry_0_to_1 -- removing the static qualifier from Hacl.Bignum.Fproduct.carry_0_to_1
Warning 8: : After inlining, Hacl.Impl.Poly1305_64.carry_last_unrolled calls Hacl.Bignum.Fproduct.carry_0_to_1. This is a call across translation units but Hacl.Bignum.Fproduct.carry_0_to_1 has a C "inline" qualifier. The C standard allows removing Hacl.Bignum.Fproduct.carry_0_to_1 from its translation unit (see C11 6.7.3 §5), and CompCert will do it. 
Warning 7: : After inlining, Hacl.Impl.Poly1305_64.poly1305_last_pass calls Hacl.Bignum.Fproduct.carry_limb_ -- removing the static qualifier from Hacl.Bignum.Fproduct.carry_limb_
Warning 8: : After inlining, Hacl.Impl.Poly1305_64.poly1305_last_pass calls Hacl.Bignum.Fproduct.carry_limb_. This is a call across translation units but Hacl.Bignum.Fproduct.carry_limb_ has a C "inline" qualifier. The C standard allows removing Hacl.Bignum.Fproduct.carry_limb_ from its translation unit (see C11 6.7.3 §5), and CompCert will do it. 
Warning 7: : After inlining, Crypto.Symmetric.MAC.encode_r calls Hacl.Impl.Poly1305_64.poly1305_encode_r -- removing the static qualifier from Hacl.Impl.Poly1305_64.poly1305_encode_r
Warning 8: : After inlining, Crypto.Symmetric.MAC.encode_r calls Hacl.Impl.Poly1305_64.poly1305_encode_r. This is a call across translation units but Hacl.Impl.Poly1305_64.poly1305_encode_r has a C "inline" qualifier. The C standard allows removing Hacl.Impl.Poly1305_64.poly1305_encode_r from its translation unit (see C11 6.7.3 §5), and CompCert will do it. 
Warning 7: : After inlining, Crypto.Symmetric.MAC.update calls Hacl.Impl.Poly1305_64.poly1305_update -- removing the static qualifier from Hacl.Impl.Poly1305_64.poly1305_update
Warning 7: : After inlining, Crypto.Symmetric.MAC.finish calls Hacl.Impl.Poly1305_64.poly1305_finish_ -- removing the static qualifier from Hacl.Impl.Poly1305_64.poly1305_finish_
Warning 7: : After inlining, Crypto.AEAD.Invariant.remaining_len_ok calls FStar.Mul.op_Star -- removing the static qualifier from FStar.Mul.op_Star
Warning 7: : After inlining, Crypto.AEAD.Decrypt.decrypt calls Crypto.AEAD.Encoding.add_bytes -- removing the static qualifier from Crypto.AEAD.Encoding.add_bytes
Warning 7: : After inlining, Crypto.AEAD.Decrypt.decrypt calls Crypto.AEAD.Encoding.store_lengths_poly1305 -- removing the static qualifier from Crypto.AEAD.Encoding.store_lengths_poly1305
Warning 7: : After inlining, Crypto.AEAD.Decrypt.decrypt calls Crypto.AEAD.Encoding.store_lengths_ghash -- removing the static qualifier from Crypto.AEAD.Encoding.store_lengths_ghash
Warning 7: : After inlining, Crypto.AEAD.Decrypt.decrypt calls Hacl.Impl.Poly1305_64.poly1305_start -- removing the static qualifier from Hacl.Impl.Poly1305_64.poly1305_start
Warning 7: : After inlining, Crypto.AEAD.Decrypt.decrypt calls Crypto.Symmetric.PRF.getBlock -- removing the static qualifier from Crypto.Symmetric.PRF.getBlock
.\aead\Crypto.AEAD.Wrappers.Encoding.fst(125,4-125,70): (Error) Unknown assertion failed
Verified module: Crypto.AEAD.Wrappers.Encoding (70634 milliseconds)
1 error was reported (see above)
make[2]: *** [Makefile:164: aead/Crypto.AEAD.Wrappers.Encoding.fst-ver] Error 1
make[2]: *** Waiting for unfinished jobs....
.\aead\Crypto.AEAD.Encrypt.fst(235,0-241,49): (Error) Unknown assertion failed
Verified module: Crypto.AEAD.Encrypt (644899 milliseconds)
1 error was reported (see above)
make[2]: *** [Makefile:164: aead/Crypto.AEAD.Encrypt.fst-ver] Error 1
.\uf1cma\Crypto.Symmetric.MAC.fst(441,0-464,16): (Error) Unknown assertion failed
Verified module: Crypto.Symmetric.MAC (957186 milliseconds)
1 error was reported (see above)
make[2]: *** [Makefile:164: uf1cma/Crypto.Symmetric.MAC.fst-ver] Error 1
.\Hacl.Spec.Bignum.Fmul.fst(92,2-92,5): (Error) assertion failed (see .\Hacl.Spec.Bignum.Fmul.fst(92,6-92,90))
Verified module: Hacl.Spec.Bignum.Fmul (1530827 milliseconds)
1 error was reported (see above)
make[3]: *** [Makefile:38: Hacl.Spec.Bignum.Fmul.fst-verify] Error 1
make[2]: *** [Makefile:15: bignum-ci] Error 2
make[1]: *** [Makefile:24: verify-code] Error 2
make[1]: *** Waiting for unfinished jobs....
make[1]: *** [Makefile:28: verify-crypto] Error 2
make: *** [Makefile:4: all] Error 2
